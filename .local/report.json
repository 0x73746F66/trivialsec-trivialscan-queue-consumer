{
    "last_updated": "2022-11-15T10:21:09",
    "transport": {
        "hostname": "www.trivialsec.com",
        "port": 443,
        "sni_support": true,
        "peer_address": "54.230.21.31",
        "certificate_mtls_expected": null
    },
    "score": 2850,
    "results": {
        "pass": 135,
        "info": 10,
        "warn": 22,
        "fail": 43
    },
    "evaluations": [
        {
            "rule_id": 1,
            "name": "Certification Authority Authorization (CAA) Present",
            "key": "caa_present",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Detected",
            "description": "The lack of any CAA records authorizes normal unrestricted issuance. It is recommended that you create CAA records for your approved CAs to minimize business impact. With CAA, you can minimize the risk of certificate issuance by unauthorized CAs and help create a more secure and transparent online ecosystem.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8659 - DNS Certification Authority Authorization (CAA) Resource Record",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8659"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.8",
                    "description": "Inappropriate access control A direct object reference occurs when a developer presents a reference to an internal application object, such as a file, directory, database record, or key, as a URL or form parameter. Attackers can change these references to access other unauthorized objects. Access controls must be applied consistently at the application layer and business logic for all URLs. The only way for an application to protect sensitive functionality is to prevent links or URLs from being viewed by unauthorized users. Attackers can perform unauthorized actions by directly accessing these URLs. An attacker can enumerate and navigate the directory structure of a website so that they can gain access to unauthorized information and learn more about the functioning of the site for later exploitation. If user interfaces allow access to unauthorized functions, this access can result in unauthorized persons gaining access to privileged credentials or cardholder data. Only authorized users should be allowed to access direct object references to sensitive resources. Limiting access to data sources will help prevent cardholder data from being made available to unauthorized sources. Unsafe direct object references in software development policies and procedures, inability to restrict URL access or inappropriate access control, such as directory traversal, should be addressed with coding techniques that include: - Users must be properly authenticated. - Entries should be sanitized. - Internal object references should not be disclosed to users. - User interfaces that do not allow access to unauthorized functions should be designed.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.10",
                    "description": "Broken authentication and session management"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "8.6",
                    "description": "Where other authentication mechanisms are used, the use of these mechanisms should be assigned as follows"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.1",
                    "description": "Bespoke and custom software are developed securely, as follows: - Based on industry standards and/or best practices for secure development. - In accordance with PCI DSS (for example, secure authentication and logging). - Incorporating consideration of information security issues during each stage of the software development lifecycle.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "11.6.1",
                    "description": "A change- and tamper-detection mechanism is deployed as follows: - To alert personnel to unauthorized modification (including indicators of compromise, changes, additions, and deletions) to the HTTP headers and the contents of payment pages as received by the consumer browser. - The mechanism is configured to evaluate the received HTTP header and payment page. - The mechanism functions are performed as follows: - At least once every seven days OR - Periodically (at the frequency defined in the entity's targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1). Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0004",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0004",
                    "tactic": "Privilege Escalation",
                    "description": "The adversary is trying to gain higher-level permissions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0038",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0038",
                    "data_source": "Domain Name",
                    "description": "Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1583",
                    "technique_url": "https://attack.mitre.org/techniques/T1583",
                    "technique": "Acquire Infrastructure",
                    "technique_description": "Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1583/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1557",
                    "technique_url": "https://attack.mitre.org/techniques/T1557",
                    "technique": "Adversary-in-the-Middle",
                    "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/004",
                    "sub_technique": "DNS",
                    "sub_technique_description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 30
        },
        {
            "rule_id": 2,
            "name": "Certification Authority Authorization (CAA) Valid",
            "key": "caa_valid",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "Certificate authorities implementing CAA perform a DNS lookup for CAA resource records, and if any are found, ensure that they are listed as an authorized party before issuing a digital certificate. Third parties monitoring certificate authority behavior might check newly issued certificates against the domain's CAA records. RFC 8659 states; CAA records MAY be used by Certificate Evaluators as a possible indicator of a security policy violation. Such use SHOULD take into account the possibility that published CAA records changed between the time a certificate was issued and the time at which the certificate was observed by the Certificate Evaluator. The CAA records can help with the enforcement of your corporate policies on approved CAs. By aligning the CAA records with the list of corporate approved CAs, the risk of non-compliance to the policy is minimized. If CAA records exist but do not include an approved or preferred CA for a specific domain, the issuance of certificates by that CA to the domain cannot proceed until the creation of the appropriate CAA record is completed.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8659 - DNS Certification Authority Authorization (CAA) Resource Record",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8659"
                },
                {
                    "name": "Ignoring CAA based on another CA's Certificate Transparency disclosure",
                    "url": "https://wiki.mozilla.org/CA/Camerfirma_Issues#Issue_F:_Ignoring_CAA_based_on_another_CA.27s_Certificate_Transparency_disclosure_.28Nov._2017.29"
                },
                {
                    "name": "Let's Encrypt? Let's revoke 3 million HTTPS certificates",
                    "url": "https://www.theregister.com/2020/03/03/lets_encrypt_cert_revocation/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.8",
                    "description": "Inappropriate access control A direct object reference occurs when a developer presents a reference to an internal application object, such as a file, directory, database record, or key, as a URL or form parameter. Attackers can change these references to access other unauthorized objects. Access controls must be applied consistently at the application layer and business logic for all URLs. The only way for an application to protect sensitive functionality is to prevent links or URLs from being viewed by unauthorized users. Attackers can perform unauthorized actions by directly accessing these URLs. An attacker can enumerate and navigate the directory structure of a website so that they can gain access to unauthorized information and learn more about the functioning of the site for later exploitation. If user interfaces allow access to unauthorized functions, this access can result in unauthorized persons gaining access to privileged credentials or cardholder data. Only authorized users should be allowed to access direct object references to sensitive resources. Limiting access to data sources will help prevent cardholder data from being made available to unauthorized sources. Unsafe direct object references in software development policies and procedures, inability to restrict URL access or inappropriate access control, such as directory traversal, should be addressed with coding techniques that include: - Users must be properly authenticated. - Entries should be sanitized. - Internal object references should not be disclosed to users. - User interfaces that do not allow access to unauthorized functions should be designed.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.10",
                    "description": "Broken authentication and session management"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "8.6",
                    "description": "Where other authentication mechanisms are used, the use of these mechanisms should be assigned as follows"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.1",
                    "description": "Bespoke and custom software are developed securely, as follows: - Based on industry standards and/or best practices for secure development. - In accordance with PCI DSS (for example, secure authentication and logging). - Incorporating consideration of information security issues during each stage of the software development lifecycle.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "11.6.1",
                    "description": "A change- and tamper-detection mechanism is deployed as follows: - To alert personnel to unauthorized modification (including indicators of compromise, changes, additions, and deletions) to the HTTP headers and the contents of payment pages as received by the consumer browser. - The mechanism is configured to evaluate the received HTTP header and payment page. - The mechanism functions are performed as follows: - At least once every seven days OR - Periodically (at the frequency defined in the entity's targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1). Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0004",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0004",
                    "tactic": "Privilege Escalation",
                    "description": "The adversary is trying to gain higher-level permissions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0038",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0038",
                    "data_source": "Domain Name",
                    "description": "Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1583",
                    "technique_url": "https://attack.mitre.org/techniques/T1583",
                    "technique": "Acquire Infrastructure",
                    "technique_description": "Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1583/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1557",
                    "technique_url": "https://attack.mitre.org/techniques/T1557",
                    "technique": "Adversary-in-the-Middle",
                    "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/004",
                    "sub_technique": "DNS",
                    "sub_technique_description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -120
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "expiry_status": "Expires in 286 days"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "expiry_status": "Expires in 286 days"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 5,
            "name": "DNSSEC Present",
            "key": "dnssec_present",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "DNS by itself is not secure, without DNSSEC ICANN states any attacker can easily redirect a user to any malicious actor controlled server without the user or authentic server realising it\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "ICANN",
                    "url": "https://www.icann.org/resources/pages/dnssec-what-is-it-why-important-2019-03-05-en"
                },
                {
                    "name": "RFC 6014 - Cryptographic Algorithm Identifier Allocation for DNSSEC",
                    "url": "https://datatracker.ietf.org/doc/html/rfc6014"
                },
                {
                    "name": "RFC 6840 - Clarifications and Implementation Notes for DNS Security",
                    "url": "https://datatracker.ietf.org/doc/html/rfc6840"
                },
                {
                    "name": "RFC 4956 - DNS Security (DNSSEC) Opt-In",
                    "url": "https://datatracker.ietf.org/doc/html/rfc4956"
                },
                {
                    "name": "RFC 4033 - DNS Security Introduction and Requirements",
                    "url": "https://datatracker.ietf.org/doc/html/rfc4033"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.8",
                    "description": "Inappropriate access control A direct object reference occurs when a developer presents a reference to an internal application object, such as a file, directory, database record, or key, as a URL or form parameter. Attackers can change these references to access other unauthorized objects. Access controls must be applied consistently at the application layer and business logic for all URLs. The only way for an application to protect sensitive functionality is to prevent links or URLs from being viewed by unauthorized users. Attackers can perform unauthorized actions by directly accessing these URLs. An attacker can enumerate and navigate the directory structure of a website so that they can gain access to unauthorized information and learn more about the functioning of the site for later exploitation. If user interfaces allow access to unauthorized functions, this access can result in unauthorized persons gaining access to privileged credentials or cardholder data. Only authorized users should be allowed to access direct object references to sensitive resources. Limiting access to data sources will help prevent cardholder data from being made available to unauthorized sources. Unsafe direct object references in software development policies and procedures, inability to restrict URL access or inappropriate access control, such as directory traversal, should be addressed with coding techniques that include: - Users must be properly authenticated. - Entries should be sanitized. - Internal object references should not be disclosed to users. - User interfaces that do not allow access to unauthorized functions should be designed.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.10",
                    "description": "Broken authentication and session management"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "8.6",
                    "description": "Where other authentication mechanisms are used, the use of these mechanisms should be assigned as follows"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.1",
                    "description": "Bespoke and custom software are developed securely, as follows: - Based on industry standards and/or best practices for secure development. - In accordance with PCI DSS (for example, secure authentication and logging). - Incorporating consideration of information security issues during each stage of the software development lifecycle.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "11.6.1",
                    "description": "A change- and tamper-detection mechanism is deployed as follows: - To alert personnel to unauthorized modification (including indicators of compromise, changes, additions, and deletions) to the HTTP headers and the contents of payment pages as received by the consumer browser. - The mechanism is configured to evaluate the received HTTP header and payment page. - The mechanism functions are performed as follows: - At least once every seven days OR - Periodically (at the frequency defined in the entity's targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1). Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0004",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0004",
                    "tactic": "Privilege Escalation",
                    "description": "The adversary is trying to gain higher-level permissions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0038",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0038",
                    "data_source": "Domain Name",
                    "description": "Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1583",
                    "technique_url": "https://attack.mitre.org/techniques/T1583",
                    "technique": "Acquire Infrastructure",
                    "technique_description": "Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1583/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1557",
                    "technique_url": "https://attack.mitre.org/techniques/T1557",
                    "technique": "Adversary-in-the-Middle",
                    "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/004",
                    "sub_technique": "DNS",
                    "sub_technique_description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 6,
            "name": "DNSSEC Valid",
            "key": "dnssec_valid",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "DNS by itself is not secure, without DNSSEC ICANN states any attacker can easily redirect a user to any malicious actor controlled server without the user or authentic server realising it\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "ICANN",
                    "url": "https://www.icann.org/resources/pages/dnssec-what-is-it-why-important-2019-03-05-en"
                },
                {
                    "name": "RFC 6014 - Cryptographic Algorithm Identifier Allocation for DNSSEC",
                    "url": "https://datatracker.ietf.org/doc/html/rfc6014"
                },
                {
                    "name": "RFC 6840 - Clarifications and Implementation Notes for DNS Security",
                    "url": "https://datatracker.ietf.org/doc/html/rfc6840"
                },
                {
                    "name": "RFC 4956 - DNS Security (DNSSEC) Opt-In",
                    "url": "https://datatracker.ietf.org/doc/html/rfc4956"
                },
                {
                    "name": "RFC 4033 - DNS Security Introduction and Requirements",
                    "url": "https://datatracker.ietf.org/doc/html/rfc4033"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.8",
                    "description": "Inappropriate access control A direct object reference occurs when a developer presents a reference to an internal application object, such as a file, directory, database record, or key, as a URL or form parameter. Attackers can change these references to access other unauthorized objects. Access controls must be applied consistently at the application layer and business logic for all URLs. The only way for an application to protect sensitive functionality is to prevent links or URLs from being viewed by unauthorized users. Attackers can perform unauthorized actions by directly accessing these URLs. An attacker can enumerate and navigate the directory structure of a website so that they can gain access to unauthorized information and learn more about the functioning of the site for later exploitation. If user interfaces allow access to unauthorized functions, this access can result in unauthorized persons gaining access to privileged credentials or cardholder data. Only authorized users should be allowed to access direct object references to sensitive resources. Limiting access to data sources will help prevent cardholder data from being made available to unauthorized sources. Unsafe direct object references in software development policies and procedures, inability to restrict URL access or inappropriate access control, such as directory traversal, should be addressed with coding techniques that include: - Users must be properly authenticated. - Entries should be sanitized. - Internal object references should not be disclosed to users. - User interfaces that do not allow access to unauthorized functions should be designed.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.10",
                    "description": "Broken authentication and session management"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "8.6",
                    "description": "Where other authentication mechanisms are used, the use of these mechanisms should be assigned as follows"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.1",
                    "description": "Bespoke and custom software are developed securely, as follows: - Based on industry standards and/or best practices for secure development. - In accordance with PCI DSS (for example, secure authentication and logging). - Incorporating consideration of information security issues during each stage of the software development lifecycle.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "11.6.1",
                    "description": "A change- and tamper-detection mechanism is deployed as follows: - To alert personnel to unauthorized modification (including indicators of compromise, changes, additions, and deletions) to the HTTP headers and the contents of payment pages as received by the consumer browser. - The mechanism is configured to evaluate the received HTTP header and payment page. - The mechanism functions are performed as follows: - At least once every seven days OR - Periodically (at the frequency defined in the entity's targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1). Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0004",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0004",
                    "tactic": "Privilege Escalation",
                    "description": "The adversary is trying to gain higher-level permissions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0038",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0038",
                    "data_source": "Domain Name",
                    "description": "Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1583",
                    "technique_url": "https://attack.mitre.org/techniques/T1583",
                    "technique": "Acquire Infrastructure",
                    "technique_description": "Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1583/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1557",
                    "technique_url": "https://attack.mitre.org/techniques/T1557",
                    "technique": "Adversary-in-the-Middle",
                    "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/004",
                    "sub_technique": "DNS",
                    "sub_technique_description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 7,
            "name": "Certificate self-signed",
            "key": "is_self_signed",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Any self-signed Certificate should be untrusted as it offers no security characteristics of TLS that is based on a system that all Certificates have a Root Certificate Authority Trust Anchor. When visiting a website that uses a self-signed Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "signature_algorithm": "sha256WithRSAEncryption",
                "reason": null
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 10,
            "name": "Leaf Certificate allows impersonation",
            "key": "leaf_ca",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Server (leaf) certificates should not be a CA, it could enable impersonation attacks\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "spki_fingerprint": "fc228b022c5d51e1316c8af00df9eda64fce86141e9f951a286ef08b22e354ab"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 18,
            "name": "OCSP Revocation",
            "key": "revocation_ocsp",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Not Revoked",
            "description": "A revoked certificate that remains in use is an indication of misconfiuguration, misuse, or abuse.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "revocation_ocsp_status": "Good",
                "revocation_ocsp_detail": null,
                "revocation_ocsp_time": "",
                "revocation_ocsp_response": "Successful",
                "revocation_ocsp_reason": ""
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 14,
            "name": "Deprecated OCSP Hash Algorithm",
            "key": "revocation_ocsp_deprecated_algo",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "Using the SHA-1 chosen-prefix collision the OCSP Assertion can be forged\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -100
        },
        {
            "rule_id": 15,
            "name": "Deprecated OCSP Signature Algorithm",
            "key": "revocation_ocsp_deprecated_sig",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the OCSP Assertion can be forged\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 16,
            "name": "OCSP Must Staple Extension",
            "key": "revocation_ocsp_must_staple",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The security benefit characteristics of OCSP can only be enforced when the 'Must Staple' flag is present. Failing to include the must staple extension in a Domain Validated (DV) or Organisation Validated (OV) Certificate will allow most web browsers and HTTP clients to 'soft-fail' the OCSP check and continue with TLS without an OCSP assertion or knowledge of revocation status. In some web browsers and HTTP clients an Extended Validation (EV) certificate will hard-fail when an OCSP assertion is not obtained, but this functionality should not be relied upon as there have been many changes made by web browsers that are divergent from standards and break assumed security guarantees suddenly become a vulnerability. Everywhere the OCSP Must Staple Extension is accepted, it will be enforced for all certificates regardless of validation semantics.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -100
        },
        {
            "rule_id": 17,
            "name": "OCSP Stapling Extension",
            "key": "revocation_ocsp_staple",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "When an OCSP assertion is not included 'stapled' with the certificate, an weakness in the clients ability to obtain a remote assertion, when the client attempts to establish a connection with the OCSP responder an additional MITM attack vector is available and forged OCSP assertions may be provided allowing an attacker to sppof the revocation status of a certificate to cause a denial of service or establish trust where otherwise a compromise would have been detected.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 65537 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -150
        },
        {
            "rule_id": 21,
            "name": "TLS/A",
            "key": "tlsa",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "DNS by itself is not secure, without TLS/a or DNSSEC ICANN states any attacker can easily redirect a user to any malicious actor controlled server without the user or authentic server realising it\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "ICANN",
                    "url": "https://www.icann.org/resources/pages/dnssec-what-is-it-why-important-2019-03-05-en"
                },
                {
                    "name": "RFC 6840 - Clarifications and Implementation Notes for DNS Security",
                    "url": "https://datatracker.ietf.org/doc/html/rfc6840"
                },
                {
                    "name": "RFC 4033 - DNS Security Introduction and Requirements",
                    "url": "https://datatracker.ietf.org/doc/html/rfc4033"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.8",
                    "description": "Inappropriate access control A direct object reference occurs when a developer presents a reference to an internal application object, such as a file, directory, database record, or key, as a URL or form parameter. Attackers can change these references to access other unauthorized objects. Access controls must be applied consistently at the application layer and business logic for all URLs. The only way for an application to protect sensitive functionality is to prevent links or URLs from being viewed by unauthorized users. Attackers can perform unauthorized actions by directly accessing these URLs. An attacker can enumerate and navigate the directory structure of a website so that they can gain access to unauthorized information and learn more about the functioning of the site for later exploitation. If user interfaces allow access to unauthorized functions, this access can result in unauthorized persons gaining access to privileged credentials or cardholder data. Only authorized users should be allowed to access direct object references to sensitive resources. Limiting access to data sources will help prevent cardholder data from being made available to unauthorized sources. Unsafe direct object references in software development policies and procedures, inability to restrict URL access or inappropriate access control, such as directory traversal, should be addressed with coding techniques that include: - Users must be properly authenticated. - Entries should be sanitized. - Internal object references should not be disclosed to users. - User interfaces that do not allow access to unauthorized functions should be designed.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.10",
                    "description": "Broken authentication and session management"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "8.6",
                    "description": "Where other authentication mechanisms are used, the use of these mechanisms should be assigned as follows"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.1",
                    "description": "Bespoke and custom software are developed securely, as follows: - Based on industry standards and/or best practices for secure development. - In accordance with PCI DSS (for example, secure authentication and logging). - Incorporating consideration of information security issues during each stage of the software development lifecycle.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "11.6.1",
                    "description": "A change- and tamper-detection mechanism is deployed as follows: - To alert personnel to unauthorized modification (including indicators of compromise, changes, additions, and deletions) to the HTTP headers and the contents of payment pages as received by the consumer browser. - The mechanism is configured to evaluate the received HTTP header and payment page. - The mechanism functions are performed as follows: - At least once every seven days OR - Periodically (at the frequency defined in the entity's targeted risk analysis, which is performed according to all elements specified in Requirement 12.3.1). Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0004",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0004",
                    "tactic": "Privilege Escalation",
                    "description": "The adversary is trying to gain higher-level permissions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0038",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0038",
                    "data_source": "Domain Name",
                    "description": "Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1583",
                    "technique_url": "https://attack.mitre.org/techniques/T1583",
                    "technique": "Acquire Infrastructure",
                    "technique_description": "Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1583/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1557",
                    "technique_url": "https://attack.mitre.org/techniques/T1557",
                    "technique": "Adversary-in-the-Middle",
                    "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/004",
                    "sub_technique": "DNS",
                    "sub_technique_description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/002",
                    "sub_technique": "DNS Server",
                    "sub_technique_description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 22,
            "name": "Certificate Transparency present",
            "key": "transparency_present",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Detected",
            "description": "CT brings transparency to the SSL/TLS certificate system that supports the web. SSL/TLS protocols underpin HTTPS and Web PKI. A lack of transparency weakens the reliability and effectiveness of encrypted connections, which can compromise critical TLS/SSL mechanisms. As a result, they can enable a wide range of security attacks, such as website spoofing, server impersonation, and man-in-the-middle attacks. Web PKI depends on CAs acting as trustworthy gatekeepers by issuing certificates only to the right parties and by avoiding giving additional permissions accidentally to those parties. An important part of how CAs meet these obligations is to design their systems so they are resilient to failure.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "certificate_transparency_status": "SCT extension Good"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Certificate Transparency step by step",
                    "url": "https://certificate.transparency.dev/howctworks/"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 23,
            "name": "Trustworthy Certificate Transparency",
            "key": "transparency_trustworthy",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "Certificate Transparency (CT) is a mechanism which helps domain owners and industry watch dogs detect misissuance. Misissuance occurs when a Certificate Authority (CA) issues an SSL certificate improperly. This may mean that the CA included incorrect information in the certificate, issued the certificate to someone who did not represent the organization or domain, or was even compromised. Some browsers require certificates to have proof of being logged with certificate transparency, Safari requires up to 3 SCTs and Chrome requires between 3 and 5. The policies are far more complex than this so the generalised best practice is using at least 3 distinct SCTs per certificate.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "certificate_transparency_description": "3 or more SCT's are sufficient"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Chrome Google Group - Certificate Transparency Policy",
                    "url": "https://groups.google.com/a/chromium.org/g/ct-policy/c/fCt4Bm03GsI"
                },
                {
                    "name": "Apple - Certificate Transparency policy",
                    "url": "https://support.apple.com/en-ca/HT205280"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 44,
            "name": "Valid Certificate Common Name",
            "key": "valid_common_name",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "This is frequently a misconfiguration, i.e. the website domain name was not included in your common name by mistake. However it is a very uncommon issue and is most likely indication of compromise, where a malicious attacker is targeting website owners or visitors using phishing or impersonation and have made the error unintentionally or was unable to effectively impersonate the website correctly and are relying on visitors ignoring browser warnings.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "common_name": "trivialsec.com"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 9110 - HTTP Semantics",
                    "url": "https://datatracker.ietf.org/doc/html/rfc9110"
                },
                {
                    "name": "DNSimple - What is the Certificate Common Name",
                    "url": "https://support.dnsimple.com/articles/what-is-common-name/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 45,
            "name": "Hostname matches Certificate",
            "key": "valid_host_name",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "This is frequently a misconfiguration, i.e. the website domain name was not included in your common name by mistake. However it is a very uncommon issue and is most likely indication of compromise, where a malicious attacker is targeting website owners or visitors using phishing or impersonation and have made the error unintentionally or was unable to effectively impersonate the website correctly and are relying on visitors ignoring browser warnings.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 9110 - HTTP Semantics",
                    "url": "https://datatracker.ietf.org/doc/html/rfc9110"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "not_before": "2022-07-31T00:00:00"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 47,
            "name": "Leaf Certificate valid for TLS usage",
            "key": "valid_key_usage_leaf",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "If the server (leaf) certificate was issued to serve the purpose of providing a TLS connection from the server-side. Any failure to include the correct signed (by the issuer) values would indicate a forged certificate and compromised connection.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 65537",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "CN=trivialsec.com",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "expiry_status": "Expires in 5541 days (15 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "expiry_status": "Expires in 5541 days (15 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "signature_algorithm": "sha256WithRSAEncryption",
                "reason": null
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "spki_fingerprint": "fbe3018031f9586bcbf41727e417b7d1c45c2f47f93be372a17b96b50757d5a2"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 65537 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 24,
            "name": "Trust Store - Android 2.2 Froyo",
            "key": "trust_android_froyo",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 25,
            "name": "Trust Store - Android 2.3 Gingerbread",
            "key": "trust_android_gingerbread",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 26,
            "name": "Trust Store - Android 3 Honeycomb",
            "key": "trust_android_honeycomb",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 27,
            "name": "Trust Store - Android 4 Ice Cream Sandwich",
            "key": "trust_android_ice_cream_sandwich",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 28,
            "name": "Trust Store - Android 4.4 KitKat",
            "key": "trust_android_kitkat",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 29,
            "name": "Trust Store - Android 7 Nougat",
            "key": "trust_android_nougat",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 30,
            "name": "Trust Store - Android 8 Oreo",
            "key": "trust_android_oreo",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 31,
            "name": "Trust Store - Android 9 Pie",
            "key": "trust_android_pie",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 32,
            "name": "Trust Store - Android 10 Quince Tart",
            "key": "trust_android_quince_tart",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 33,
            "name": "Trust Store - Android 11 Red Velvet Cake",
            "key": "trust_android_red_velvet_cake",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 34,
            "name": "Trust Store - Android 12 Snow Cone",
            "key": "trust_android_snow_cone",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 35,
            "name": "Trust Store - Android 13 Tiramisu",
            "key": "trust_android_tiramisu",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 36,
            "name": "Trust Store - Android 14 Upside Down Cake",
            "key": "trust_android_upside_down_cake",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 37,
            "name": "Trust Store - CCADB",
            "key": "trust_ccadb",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 38,
            "name": "Trust Store - certifi (Python module)",
            "key": "trust_certifi",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 39,
            "name": "Trust Store - Dart Native",
            "key": "trust_dart",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 40,
            "name": "Trust Store - Java SE",
            "key": "trust_javase",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 41,
            "name": "Trust Store - libcurl",
            "key": "trust_libcurl",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 42,
            "name": "Trust Store - MinTsifry Rossii (Russian)",
            "key": "trust_russian",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 43,
            "name": "Trust Store - Rust",
            "key": "trust_rust",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "not_before": "2015-05-26T00:00:00"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 65537",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": null,
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "expiry_status": "Expires in 1068 days (3 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "expiry_status": "Expires in 1068 days (3 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 7,
            "name": "Certificate self-signed",
            "key": "is_self_signed",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Any self-signed Certificate should be untrusted as it offers no security characteristics of TLS that is based on a system that all Certificates have a Root Certificate Authority Trust Anchor. When visiting a website that uses a self-signed Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "signature_algorithm": "sha256WithRSAEncryption",
                "reason": null
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "spki_fingerprint": "252333a8e3abb72393d6499abbacca8604faefa84681ccc3e5531d44cc896450"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 13,
            "name": "Intermediate Certificate Revocation (crlite)",
            "key": "revocation_crlite",
            "group_id": 2,
            "group": "certificate",
            "result_value": "NotCovered",
            "result_label": "Not Covered",
            "description": "Certificate Revocation only occurs if the Certificate is no longer intended to be used for it's designed purpose, and offers no security at best, or represents a known compormise",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://blog.mozilla.org/security/tag/crlite/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -120
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 65537 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -150
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "not_before": "2015-10-22T00:00:00"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 65537",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "expiry_status": "Expires in 5525 days (15 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "expiry_status": "Expires in 5525 days (15 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "signature_algorithm": "sha256WithRSAEncryption",
                "reason": null
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "spki_fingerprint": "2b071c59a0a0ae76b0eadb2bad23bad4580b69c3601b630c2eaf0613afa83f92"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 65537 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 24,
            "name": "Trust Store - Android 2.2 Froyo",
            "key": "trust_android_froyo",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 25,
            "name": "Trust Store - Android 2.3 Gingerbread",
            "key": "trust_android_gingerbread",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 26,
            "name": "Trust Store - Android 3 Honeycomb",
            "key": "trust_android_honeycomb",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 27,
            "name": "Trust Store - Android 4 Ice Cream Sandwich",
            "key": "trust_android_ice_cream_sandwich",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 28,
            "name": "Trust Store - Android 4.4 KitKat",
            "key": "trust_android_kitkat",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 29,
            "name": "Trust Store - Android 7 Nougat",
            "key": "trust_android_nougat",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 30,
            "name": "Trust Store - Android 8 Oreo",
            "key": "trust_android_oreo",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 31,
            "name": "Trust Store - Android 9 Pie",
            "key": "trust_android_pie",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 32,
            "name": "Trust Store - Android 10 Quince Tart",
            "key": "trust_android_quince_tart",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 33,
            "name": "Trust Store - Android 11 Red Velvet Cake",
            "key": "trust_android_red_velvet_cake",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 34,
            "name": "Trust Store - Android 12 Snow Cone",
            "key": "trust_android_snow_cone",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 35,
            "name": "Trust Store - Android 13 Tiramisu",
            "key": "trust_android_tiramisu",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 36,
            "name": "Trust Store - Android 14 Upside Down Cake",
            "key": "trust_android_upside_down_cake",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 37,
            "name": "Trust Store - CCADB",
            "key": "trust_ccadb",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 38,
            "name": "Trust Store - certifi (Python module)",
            "key": "trust_certifi",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 39,
            "name": "Trust Store - Dart Native",
            "key": "trust_dart",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 40,
            "name": "Trust Store - Java SE",
            "key": "trust_javase",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 41,
            "name": "Trust Store - libcurl",
            "key": "trust_libcurl",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -100
        },
        {
            "rule_id": 42,
            "name": "Trust Store - MinTsifry Rossii (Russian)",
            "key": "trust_russian",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 43,
            "name": "Trust Store - Rust",
            "key": "trust_rust",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "not_before": "2009-09-01T00:00:00"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 65537",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": null,
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "expiry_status": "Expires in 5524 days (15 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "expiry_status": "Expires in 5524 days (15 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 7,
            "name": "Certificate self-signed",
            "key": "is_self_signed",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Any self-signed Certificate should be untrusted as it offers no security characteristics of TLS that is based on a system that all Certificates have a Root Certificate Authority Trust Anchor. When visiting a website that uses a self-signed Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "signature_algorithm": "sha256WithRSAEncryption",
                "reason": null
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "spki_fingerprint": "fbe3018031f9586bcbf41727e417b7d1c45c2f47f93be372a17b96b50757d5a2"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 13,
            "name": "Intermediate Certificate Revocation (crlite)",
            "key": "revocation_crlite",
            "group_id": 2,
            "group": "certificate",
            "result_value": "NotEnrolled",
            "result_label": "Not Enrolled",
            "description": "Certificate Revocation only occurs if the Certificate is no longer intended to be used for it's designed purpose, and offers no security at best, or represents a known compormise",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://blog.mozilla.org/security/tag/crlite/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -120
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 65537 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "not_before": "2015-05-25T12:00:00"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 65537",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "expiry_status": "Expires in 4244 days (12 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "expiry_status": "Expires in 4244 days (12 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "signature_algorithm": "sha1WithRSAEncryption",
                "reason": "The use of SHA1 with RSA Encryption is considered vulnerable. Macquarie University Australia 2009: identified vulnerabilities to collision attacks, later in 2017 Marc Stevens demonstrated collision proofs"
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -120
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "spki_fingerprint": "15f14ac45c9c7da233d3479164e8137fe35ee0f38ae858183f08410ea82ac4b4"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 3 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Problematic",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "public_key_exponent": 3
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -180
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 24,
            "name": "Trust Store - Android 2.2 Froyo",
            "key": "trust_android_froyo",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 25,
            "name": "Trust Store - Android 2.3 Gingerbread",
            "key": "trust_android_gingerbread",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 26,
            "name": "Trust Store - Android 3 Honeycomb",
            "key": "trust_android_honeycomb",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 27,
            "name": "Trust Store - Android 4 Ice Cream Sandwich",
            "key": "trust_android_ice_cream_sandwich",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 28,
            "name": "Trust Store - Android 4.4 KitKat",
            "key": "trust_android_kitkat",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 29,
            "name": "Trust Store - Android 7 Nougat",
            "key": "trust_android_nougat",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 30,
            "name": "Trust Store - Android 8 Oreo",
            "key": "trust_android_oreo",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 31,
            "name": "Trust Store - Android 9 Pie",
            "key": "trust_android_pie",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 32,
            "name": "Trust Store - Android 10 Quince Tart",
            "key": "trust_android_quince_tart",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 33,
            "name": "Trust Store - Android 11 Red Velvet Cake",
            "key": "trust_android_red_velvet_cake",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 34,
            "name": "Trust Store - Android 12 Snow Cone",
            "key": "trust_android_snow_cone",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 35,
            "name": "Trust Store - Android 13 Tiramisu",
            "key": "trust_android_tiramisu",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 36,
            "name": "Trust Store - Android 14 Upside Down Cake",
            "key": "trust_android_upside_down_cake",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 37,
            "name": "Trust Store - CCADB",
            "key": "trust_ccadb",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 38,
            "name": "Trust Store - certifi (Python module)",
            "key": "trust_certifi",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 39,
            "name": "Trust Store - Dart Native",
            "key": "trust_dart",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 40,
            "name": "Trust Store - Java SE",
            "key": "trust_javase",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 41,
            "name": "Trust Store - libcurl",
            "key": "trust_libcurl",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 42,
            "name": "Trust Store - MinTsifry Rossii (Russian)",
            "key": "trust_russian",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 43,
            "name": "Trust Store - Rust",
            "key": "trust_rust",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Trusted",
            "description": "Certificates should be treated as suspicious when they do not have a trusted Root Certificate Authority, as it offers no security characteristics of TLS built on Trust Anchor system. When visiting a website that uses an untrusted Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 44,
            "name": "Valid Certificate Common Name",
            "key": "valid_common_name",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "This is frequently a misconfiguration, i.e. the website domain name was not included in your common name by mistake. However it is a very uncommon issue and is most likely indication of compromise, where a malicious attacker is targeting website owners or visitors using phishing or impersonation and have made the error unintentionally or was unable to effectively impersonate the website correctly and are relying on visitors ignoring browser warnings.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 9110 - HTTP Semantics",
                    "url": "https://datatracker.ietf.org/doc/html/rfc9110"
                },
                {
                    "name": "DNSimple - What is the Certificate Common Name",
                    "url": "https://support.dnsimple.com/articles/what-is-common-name/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -150
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "not_before": "2004-06-29T17:39:16"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 3",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "public_key_exponent": 3
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -150
        },
        {
            "rule_id": 3,
            "name": "Certificate is not expired",
            "key": "certification_expired",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "expiry_status": "Expires in 4243 days (12 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 51,
            "name": "Certificate is about to expire",
            "key": "certification_expiring",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses an expired Certificate it is likely the TLS connection is not secure. Certificate rotation should occur before the expiry date. Some issuers can take many business days to supply a replacement, and deploying the replacement to live systems often requires planning and care. If a Certificate will expire in the next 72 hours it is considered a critical risk, particularly if near weekends or holidays.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "expiry_status": "Expires in 4243 days (12 years)"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 50,
            "name": "X.509 Certificates are in version 3",
            "key": "certification_version",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Non-compliant",
            "description": "HIPAA, Security Rule (Ref. NIST SP 800-52: Guidelines for the Selection and Use of TLS Implementations) Require all the X509 certificates provided by the server are in version 3.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "certificate_version": 2
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST SP 800-52 - Guidelines for the Selection and Use of TLS Implementations",
                    "url": "https://www.hhs.gov/hipaa/for-professionals/security/guidance/index.html"
                },
                {
                    "name": "HIPAA / HITECH",
                    "url": "https://www.hhs.gov/hipaa/index.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                }
            ],
            "threats": [],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -50
        },
        {
            "rule_id": 7,
            "name": "Certificate self-signed",
            "key": "is_self_signed",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Any self-signed Certificate should be untrusted as it offers no security characteristics of TLS that is based on a system that all Certificates have a Root Certificate Authority Trust Anchor. When visiting a website that uses a self-signed Certificate it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2014-3522",
                "CVE-2014-3603",
                "CVE-2016-1280",
                "CVE-2017-2911",
                "CVE-2017-2912",
                "CVE-2018-10936",
                "CVE-2020-14387",
                "CVE-2020-15260"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 8,
            "name": "Known Weak key usage RSA-2048",
            "key": "known_weak_keys",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Continued use of weak keys in certificates puts your sensitive data at risk. Exhaustive key searches or brute force attacks against certificates with weak keys are dangerous to network security. As computational power increases, so does the need for stronger keys. If this is not the leaf certificate it is a root or intermediate which signs other digital certificates with its private key, if the private key is weak it may be compromised and all the rest of the issued certificates become useless. Diffie-Hellman key exchange depends for its security on the presumed difficulty of solving the discrete logarithm problem. By design, many Diffie-Hellman implementations use the same pre-generated prime for their field, because of the reuse of primes generating precomputation for just one prime would expose millions of implementations. This vulnerability was known as early as 1992. Claims on the practical implications of the attack at the time were however disputed by security researchers but over the years it is expected that many primes were and still are being calculated practically making all primes of 2048 bit or less considered weak or vulnerable.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "reason": "The use RSA Encryption is considered vulnerable in certain context. 2000: Factorization of a 512-bit RSA Modulus, essentially derive a private key knowing only the public key. Verified bt EFF in 2001. Later in 2009 factorization of up to 1024-bit keys",
                "public_key_type": "RSA",
                "public_key_size": 2048
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "RFC 8270 - Increase the Secure Shell Minimum Recommended Diffie-Hellman Modulus Size to 2048 Bits",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8270"
                },
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                },
                {
                    "name": "Logjam Attack - Imperfect Forward Secrecy, How Diffie-Hellman Fails in Practice",
                    "url": "https://weakdh.org/imperfect-forward-secrecy-ccs15.pdf"
                },
                {
                    "name": "TLS/SSL certificate weak key vulnerability - DigiCert",
                    "url": "https://docs.digicert.com/certificate-tools/discovery-user-guide/tlsssl-certificate-vulnerabilities/weak-keys/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 9,
            "name": "Deprecated or known weak signature algorithm",
            "key": "known_weak_signature_algorithm",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using the SHA-1 chosen-prefix collision the X.509 Certificate can be forged, other attacks leverage predictable serial numbers and compromise Certificate Authorities issued Certificates\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "signature_algorithm": "sha256WithRSAEncryption",
                "reason": null
            },
            "cve": [
                "CVE-2005-4900",
                "CVE-2019-14855",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Disclosure Paper",
                    "url": "https://shattered.io/"
                },
                {
                    "name": "CA/Browser Forum",
                    "url": "https://cabforum.org/2014/10/16/ballot-118-sha-1-sunset/"
                },
                {
                    "name": "Cambridge University Information Services",
                    "url": "https://www.dns.cam.ac.uk/news/2020-01-09-sha-mbles.html"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://sha-mbles.github.io/"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 11,
            "name": "Malicious Certificate",
            "key": "possible_phish_or_malicious",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "Malicious certificates are most commonly signed by trusted certificate authority roots, to evade detection by blending in with legitimate traffic and making use of encryption to help hide their payloads. Both commodity and targeted attack malware make heavy use of encrypted command-and-control (C&C) that is indistinguishable from regular traffic, and ethical actors (with permission granted) will leverage tools called intrusion frameworks like; Cobalt Strike, Metasploit, and Core Impact that should be identified as though these were unauthorised because bad actors will attempt to emulate a penetration tester in order to take advantage of a trust relationship and infect you regardless. Phishing websites will use these malicious certificates that are identical to legitimate certificates which gives a false sense of security to victims who observe the strong encryption being used in their browser\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "abuse.sh": false
            },
            "cve": [
                "CVE-2022-21836",
                "CVE-2022-22946",
                "CVE-2020-0601",
                "CVE-2013-1493",
                "CVE-2009-3455",
                "CVE-2004-2761"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Analyzing SSL/TLS Certificates Used by Malware (Trend Micro)",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:lXyCnKFb3acJ:https://www.trendmicro.com/en_us/research/21/i/analyzing-ssl-tls-certificates-used-by-malware.html+&cd=1&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "5.2",
                    "description": "Make sure all anti-virus mechanisms are working properly"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.7.5",
                    "description": "Key management policies procedures are implemented to include the retirement, replacement, or destruction of keys used to protect stored account data, as deemed necessary when: - The key has reached the end of its defined cryptoperiod. - The integrity of the key has been weakened, including when personnel with knowledge of a cleartext key component leaves the company, or the role for which the key component was known. - The key is suspected of or known to be compromised. - Retired or replaced keys are not used for encryption operations.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "5.2.2",
                    "description": "The deployed anti-malware solution(s): - Detects all known types of malware. - Removes, blocks, or contains all known types of malware.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2.1",
                    "description": "POI terminals using SSL and/or early TLS are confirmed as not susceptible to known SSL/TLS exploits."
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "Known Compromised Private Key",
            "key": "private_key_known_compromised",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Not Known Compromised",
            "description": "DSA keys, and RSA keys smaller than 1024 bits offer no security and should not be used at all, whether they are known to be compromised or not. The pwnedkeys database keeps records of compromised 1024 bit and larger RSA/DSA keys, as well as elliptic-curve keys on the P-256, P-384, and P-521 curves. If your private key is ever compromised, it should be considered an emergency, and your priority should be resolving the issue immediately. If an unauthorized person gains access to your private key, they can assume the identity that your certificate is intended to protect (e.g. you, your company, and/or your website)\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "spki_fingerprint": "2b071c59a0a0ae76b0eadb2bad23bad4580b69c3601b630c2eaf0613afa83f92"
            },
            "cve": [
                "CVE-2007-3108",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:L/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://www.debian.org/security/2008/dsa-1571"
                },
                {
                    "name": "OSINT",
                    "url": "https://pwnedkeys.com/faq.html"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1573",
                    "technique_url": "https://attack.mitre.org/techniques/T1573",
                    "technique": "Encrypted Channel",
                    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1566",
                    "technique_url": "https://attack.mitre.org/techniques/T1566",
                    "technique": "Phishing",
                    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1598",
                    "technique_url": "https://attack.mitre.org/techniques/T1598",
                    "technique": "Phishing for Information",
                    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1596",
                    "technique_url": "https://attack.mitre.org/techniques/T1596",
                    "technique": "Search Open Technical Databases",
                    "technique_description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1596/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/005",
                    "sub_technique": "Link Target",
                    "sub_technique_description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1552",
                    "technique_url": "https://attack.mitre.org/techniques/T1552",
                    "technique": "Unsecured Credentials",
                    "technique_description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1552/004",
                    "sub_technique": "Private Keys",
                    "sub_technique_description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 13,
            "name": "Intermediate Certificate Revocation (crlite)",
            "key": "revocation_crlite",
            "group_id": 2,
            "group": "certificate",
            "result_value": "NotEnrolled",
            "result_label": "Not Enrolled",
            "description": "Certificate Revocation only occurs if the Certificate is no longer intended to be used for it's designed purpose, and offers no security at best, or represents a known compormise",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Security Advisory",
                    "url": "https://blog.mozilla.org/security/tag/crlite/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0042",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0042",
                    "tactic": "Resource Development",
                    "description": "The adversary is trying to establish resources they can use to support operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0001",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0001",
                    "tactic": "Initial Access",
                    "description": "The adversary is trying to get into your network.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1587",
                    "technique_url": "https://attack.mitre.org/techniques/T1587",
                    "technique": "Develop Capabilities",
                    "technique_description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1587/003",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1484",
                    "technique_url": "https://attack.mitre.org/techniques/T1484",
                    "technique": "Domain Policy Modification",
                    "technique_description": "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1484/002",
                    "sub_technique": "Domain Trust Modification",
                    "sub_technique_description": "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1534",
                    "technique_url": "https://attack.mitre.org/techniques/T1534",
                    "technique": "Internal Spearphishing",
                    "description": "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1588",
                    "technique_url": "https://attack.mitre.org/techniques/T1588",
                    "technique": "Obtain Capabilities",
                    "technique_description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1588/004",
                    "sub_technique": "Digital Certificates",
                    "sub_technique_description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1608",
                    "technique_url": "https://attack.mitre.org/techniques/T1608",
                    "technique": "Stage Capabilities",
                    "technique_description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities can also be staged on web services, such as GitHub or Pastebin.\n",
                    "sub_technique_id": "003",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1608/003",
                    "sub_technique": "Install Digital Certificate",
                    "sub_technique_description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1553",
                    "technique_url": "https://attack.mitre.org/techniques/T1553",
                    "technique": "Subvert Trust Controls",
                    "technique_description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1553/004",
                    "sub_technique": "Install Root Certificate",
                    "sub_technique_description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -120
        },
        {
            "rule_id": 19,
            "name": "RSA public key exponent 65537 has known issues",
            "key": "rsa_public_key_issue",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Any higher exponent would make the public RSA operation, used for encryption or signature verification, unusably slower. Using a larger exponent will not decrease security, but will be more time / power consuming.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2013-7287",
                "CVE-2014-9975",
                "CVE-2015-0575",
                "CVE-2018-15124",
                "CVE-2019-9863",
                "CVE-2020-6966",
                "CVE-2013-0764",
                "CVE-2017-14262",
                "CVE-2020-5763",
                "CVE-2021-26726",
                "CVE-2017-14797",
                "CVE-2017-8076",
                "CVE-2011-4121",
                "CVE-2013-2166",
                "CVE-2017-11317",
                "CVE-2017-1000486",
                "CVE-2018-0448",
                "CVE-2018-20810",
                "CVE-2019-15805",
                "CVE-2019-15806",
                "CVE-2020-9761",
                "CVE-2020-10275",
                "CVE-2020-27998",
                "CVE-2020-29658",
                "CVE-2021-24020",
                "CVE-2021-27200",
                "CVE-2021-45512"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 20,
            "name": "Strong Issuer Validation",
            "key": "strong_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "Domain Validated (DV) Certificates may be growing in popularity since the browsers ceased showing the organisation name along with a green padlock, but the visual change is not material to the security characteristic associated with Extended Validation (EV) Certificates. When the visual changes occurred the mainstream non-technical or the uneducated in cybersecurity masses all declared that EV Certificates are dead, but the reality and truth of the matter is EV Certificates have never been more important. Let's consider some facts: 1. DV Certificates are extensively (almost solely) used by malicious actors of all types; targeted, watering hole, spray-and-pray, any type leverage DV Certificates because they are free, trusted, and easily to obtain anonymously 2. A malicious EV Certificates is inherently forged for a target, displaying the forged organisation name to a layman in the browser was an attack on the user trust; Only \"IF\" the layman was savvy enough they might not trust the forged cert. Today we hide the forgery and as a result there is automatic blind trust and no mechanism for a layman to see the forgery and potentially avoid the threat. To be concise, we used to offer a possible chance to thwart an attacker, now we simply force trust upon users and offer them no means to easily verify anymore. So the changes to EV Certificates in practice made things worse, not better. 3. Extended Validation certificates offer warranties up to $2M from my personal experience in Australia, When we are talking about a data breach like the one that happened to Equifax due to an expired EV Certificate, it matters. 4. Legislative, Regulatory, International or Local Privacy Laws, Accreditation held for certain practices, Contractual Obligation (like PCI DSS) - all or any of these may obligate you to utilize at the least an EV Certificate, the DV Certificate has little (if any) security assurances. 5. The DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections? 6. An EV Certificate inherently required an out-of-band validation, that is not automated like a DV Certificate. Therefore if an ATO (Account Take-over) or DNS hijacking attack were to be successful the attacker must be persistent and sometimes be physically attacking you. Which all takes significantly more time than the near-instant time it takes for the DV Certificates to be issued. When you operate public hosted (cloud) servers, they are typically ephemeral IP Addresses. The hazard with an IP Address that changes between distinct users is there is a possibility a patient malicious actor may get assigned an IP Address previously held by a valuable customer of the service provider. The way DNS works with TTL and caches means that some requests will still attempt to connect to IP Address you now have that were intended for the previous IP Address owner. If the IP Address the malicious attacker is assigned is rDNS checked and the malicious actor doesn't find anything of value, they can easily discard the IP Address and simply request a new one over and over until they get an IP that is of value to them. This is called IP Churn, and a paper describes how this technique that is an accepted \"how things work\" can be combined with DV Certificates that are also accepted as \"how things work\", combined allow for DNS hijacking. This is a proven attack, and the attack vectors with continue to work as long as service providers assign IP Addresses that are still fresh and DV certificates are automatically issued in nanoseconds. Put simply, DV Certificates are favoured by attackers and seeing one should make you sceptical, they're issued for ease-of-use and not for security purposes, and there is a trivial DNS take-over attack that can be used for targeted attacks when attackers are sufficiently motivated. An EV Certificate is the distinct opposite, attackers avoid using them unless they are desperate and motivated to ignore the risks to them, they are issued with security focus in spite of the time do validation which is an effective mitigation to the trivial DNS take-over attack.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Hiding in Plain Sight - A Longitudinal Study of Combosquatting Abuse",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:s_bQ24QvDcQJ:https://par.nsf.gov/servlets/purl/10047386+&cd=6&hl=en&ct=clnk&gl=au"
                },
                {
                    "name": "Cloud Strife - Mitigating the Security Risks ofDomain-Validated Certificates",
                    "url": "https://webcache.googleusercontent.com/search?q=cache:dQ4atOcEvWEJ:https://kevin.borgolte.me/files/pdf/ndss2018-cloud-strife.pdf+&cd=13&hl=en&ct=clnk&gl=au"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 46,
            "name": "Valid NotBefore date",
            "key": "valid_issued_date",
            "group_id": 2,
            "group": "certificate",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "When visiting a website that uses a Certificate with an invalid NotBefore date, it is likely the TLS connection is not secure.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "not_before": "2009-09-02T00:00:00"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": null,
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 48,
            "name": "Weak Issuer Validation",
            "key": "weak_issuer_validation",
            "group_id": 2,
            "group": "certificate",
            "result_value": null,
            "result_label": "Not Implemented",
            "description": "You can get issued a DV Certificate without actually validating the domain, Until 2018 the ACME protocol of Let's Encrypt did just this, relying on only SNI for the so-called DV Certificate issuance - not their fault, ACME was designed that way. June 2022 there are hundreds of ACME protocol Certificate Authorities issuing DV certificates and few would have learned from the 2018 disclosure and turned off the vulnerable design feature of SNI. There are a total of 10 methods of verification defined by ACME, few actually offer any security characteristics that can be said to 'Verify' Domain Ownership, in fact some are designed on purpose to offer DV certificates to customers of website hosting providors that can only modify the HTTP header responses, or less control and can only add a HTML tag! Neitehr of these are verifying control of a domain, let alone Validate domain control! What is a DV certificate if domain validation never occurred? Beyond validation itself; The ACME protocol DV Certificate Issuers generally don't offer any additional features, therefore even if you attempt to use certain features like ssl_stapling it will simply be ignored. These Issuers, (pick on Let's Encrypt for this one) simply prefer low-barrier and ease-of-use over any and all security characteristics - so if they don't care, why would you put any trust in their DV Certificates to secure your TLS connections?\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 8555 - Automatic Certificate Management Environment (ACME)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8555"
                },
                {
                    "name": "Detectify - How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting",
                    "url": "https://labs.detectify.com/2018/01/12/how-i-exploited-acme-tls-sni-01-issuing-lets-encrypt-ssl-certs-for-any-domain-using-shared-hosting/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "INFO!",
            "result_level": "info",
            "score": 0
        },
        {
            "rule_id": 49,
            "name": "Known Weak RSA public key exponent 65537",
            "key": "weak_rsa_public_exponent",
            "group_id": 2,
            "group": "certificate",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Using anything other than 65537 as the public exponent would effect compatibility with most hardware and software. Lower isn't vulnerable with proper padding however RSA implementations are widely flawed and did not consider this security characteristic therefore in practice any low exponent could indicate weakness known to be exploited by many heavily scrutinised researchers publications. Using exatly 65537 is an industry standard prescribed by certification authorities and compliance such as PCI DSS, Annex B.3 of FIP186-4, NIST Special Publication on Computer Security (SP 800-78 Rev. 1 of August 2007) does not allow public exponents e smaller than 65537.\n",
            "metadata": {
                "certificate_subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "public_key_exponent": 65537
            },
            "cve": [
                "CVE-2021-33560",
                "CVE-2018-16150",
                "CVE-2018-16253",
                "CVE-2018-16149",
                "CVE-2011-4121",
                "CVE-2006-7140",
                "CVE-2006-4339",
                "CVE-2006-2940"
            ],
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": [
                {
                    "name": "Twenty Years of Attacks on the RSA Cryptosystem - Dan Boneh, Stanford University",
                    "url": "https://www.researchgate.net/publication/2538368_Twenty_Years_of_Attacks_on_the_RSA_Cryptosystem"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.7",
                    "description": "All non-console administrative access is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.2",
                    "description": "SAD that is stored electronically prior to completion of authorization is encrypted using strong cryptography."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.3.3",
                    "description": "Additional requirement for issuers and companies that support issuing services and store sensitive authentication data: Any storage of sensitive authentication data is: - Limited to that which is needed for a legitimate issuing business need and is secured. - Encrypted using strong cryptography. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 3.3.3 and must be fully considered during a PCI DSS assessment.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.5.1",
                    "description": "PAN is rendered unreadable anywhere it is stored by using any of the following approaches: - One-way hashes based on strong cryptography of the entire PAN. - Truncation (hashing cannot be used to replace the truncated segment of PAN). If hashed and truncated versions of the same PAN, or different truncation formats of the same PAN, are present in an environment,are in place such that the different versions cannot be correlated to reconstruct the original PAN. - Index tokens. - Strong cryptography with associated key-management processes and procedures.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "3.6.1",
                    "description": "Procedures are defined and implemented to protect cryptographic keys used to protect stored account data against disclosure and misuse that include: - Access to keys is restricted to the fewest number of custodians necessary. - Key-encrypting keys are at least as strong as the data-encrypting keys they protect. - Key-encrypting keys are stored separately from data-encrypting keys. - Keys are stored securely in the fewest possible locations and forms.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.2",
                    "description": "PAN is secured with strong cryptography whenever it is sent via end-user messaging technologies."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "8.3.2",
                    "description": "Strong cryptography is used to render all authentication factors unreadable during transmission and storage on all system components."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "A2",
                    "description": "Additional PCI DSS Requirements for Entities Using SSL/Early TLS for Card-Present POS POI Terminal Connections"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 1,
            "name": "HTTPS transport compression",
            "key": "compression_support",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Multiple compression vulnerabilities exist across all SS/TLS versions when HTTPS transport naively utilises compression without taking proper care to mitigate all known attacks. Due to the nature and trivial complexity of most compression related attacks, and mitigated both known and inknown threats may be a futile effort, it is best practice to avoid compression and instead rely on minimising the data being transmitted to only what is needed.\n",
            "metadata": {},
            "cve": [
                "CVE-2022-32206",
                "CVE-2022-1271",
                "CVE-2020-5933",
                "CVE-2018-25032",
                "CVE-2013-3587"
            ],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Compression and information leakage of plaintext - John Kelsey",
                    "url": "https://www.sjoerdlangkemper.nl/2016/08/23/compression-side-channel-attacks/"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 2,
            "name": "CRIME/BEAST Vulnerability",
            "key": "crime_vuln",
            "group_id": 4,
            "group": "transport",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Server supports TLS compression which may allow CRIME/BEAST attacks\n",
            "metadata": {
                "crime_cbc": "Found 3 possibilities"
            },
            "cve": [
                "CVE-2012-4929"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
            "references": [
                {
                    "name": "RFC 3749 - Transport Layer Security Protocol Compression Methods",
                    "url": "https://datatracker.ietf.org/doc/html/rfc3749"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -180
        },
        {
            "rule_id": 3,
            "name": "HTTP/2 cleartext",
            "key": "h2c",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "This will lead to a communication channel establised over an insecure network connection\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)",
                    "url": "https://datatracker.ietf.org/doc/html/rfc7540"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0010",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0010",
                    "tactic": "Exfiltration",
                    "description": "The adversary is trying to steal data.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0025",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0025",
                    "data_source": "Cloud Service",
                    "description": "Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0010",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0010",
                    "data_source": "Cloud Storage",
                    "description": "Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1505",
                    "technique_url": "https://attack.mitre.org/techniques/T1505",
                    "technique": "Server Software Component",
                    "description": "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 80
        },
        {
            "rule_id": 4,
            "name": "Block reading clipboard contents",
            "key": "header_block_clipboard",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "Websites are not expected to read contents of the users' clipboard, which commonly contains private or sensitive information. A webserver can instruct web browsers to block this feature so that any malicious scripts cannot leverage the API.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1115",
                    "technique_url": "https://attack.mitre.org/techniques/T1115",
                    "technique": "Clipboard Data",
                    "description": "Adversaries may collect data stored in the clipboard from users copying information within or between applications.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -180
        },
        {
            "rule_id": 5,
            "name": "Block the use of deprecated APIs",
            "key": "header_block_deprecated",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "Websites that are maintained should not be utilising deprecated features, that commonly exhibit insecure functionality or vulnerable to abuse. A webserver can instruct web browsers to block these features so that any malicious scripts cannot leverage the API.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -180
        },
        {
            "rule_id": 6,
            "name": "Require Cross-Origin-Embedder-Policy",
            "key": "header_coep",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The server sent a response header that prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (using CORP or CORS). The default configuration when this is not sent allows the document to fetch cross-origin resources which leaves users' vulnerable to cross-site scripting (XSS) attacks.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -180
        },
        {
            "rule_id": 7,
            "name": "Same-Origin Cross-Origin-Opener-Policy",
            "key": "header_coop",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The server sent a response header allows you to ensure a top-level document does not share a browsing context group with cross-origin documents. COOP will process-isolate your document and potential attackers can't access your global object if they were to open it in a popup, preventing a set of cross-origin attacks dubbed XS-Leaks.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -180
        },
        {
            "rule_id": 8,
            "name": "Same-Origin Cross-Origin-Resource-Policy",
            "key": "header_corp",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The server sent a response header that prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (CORS). The default configuration when this is not sent allows the document to fetch cross-origin resources which leaves users' vulnerable to cross-site scripting (XSS) attacks.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -180
        },
        {
            "rule_id": 9,
            "name": "Content-Security-Policy",
            "key": "header_csp",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The server sent a response header allows web site administrators to control resources the user agent is allowed to load for a given page. With a few exceptions, policies mostly involve specifying server origins and script endpoints. This helps guard against cross-site scripting attacks cross-site scripting (XSS)\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 11,
            "name": "HTTP Strict-Transport-Security",
            "key": "header_hsts",
            "group_id": 4,
            "group": "transport",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "The server sent a response header to inform supporting browsers that the site should only be accessed using HTTPS, and that any future attempts to access it using HTTP should automatically be converted to HTTPS.\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 12,
            "name": "nosniff X-Content-Type-Options",
            "key": "header_nosniff",
            "group_id": 4,
            "group": "transport",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "The server sent a response header to inform supporting browsers that the MIME types advertised in the Content-Type headers should be followed and not be changed. The header allows you to avoid MIME type sniffing by saying that the MIME types are deliberately configured.\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 13,
            "name": "Policy-controlled browser features",
            "key": "header_permissions_policy",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "A webserver can instruct web browsers to allowlist on the features the site owner intends to utilise, blocking all unused features so that any malicious scripts cannot leverage the unused features or API.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -100
        },
        {
            "rule_id": 14,
            "name": "unsafe URL Referrer-Policy",
            "key": "header_referrer_policy",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "The Referrer-Policy HTTP header controls how much referrer information (sent with the Referer header) should be included with requests. This policy will leak potentially-private information from HTTPS resource URLs to insecure origins. Carefully consider the impact of this setting.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 15,
            "name": "Upgrade Insecure Requests",
            "key": "header_upgrade_insecure",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The server sent a response header to inform supporting browsers to ensure TLS is used even when misconfigured scripts attempt insecure connections.\n",
            "metadata": {
                "missing_paths": [
                    "/"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/upgrade-insecure-requests"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -200
        },
        {
            "rule_id": 16,
            "name": "Safe HTML iframe options",
            "key": "header_xfo",
            "group_id": 4,
            "group": "transport",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "The server sent a response header to inform supporting browsers whether or not a browser should be allowed to render a page in a <frame>, <iframe>, <embed> or <object>. Sites can use this to avoid click-jacking attacks, by ensuring that their content is not embedded into other sites. The added security is provided only if the user accessing the document is using a browser that supports X-Frame-Options.\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 35
        },
        {
            "rule_id": 17,
            "name": "Block mode XSS-Protection",
            "key": "header_xss",
            "group_id": 4,
            "group": "transport",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "The server sent a response header to inform supporting browsers to stop pages from loading when they detect reflected cross-site scripting (XSS) attacks. These protections are largely unnecessary in modern browsers when sites implement a strong Content-Security-Policy that disables the use of inline JavaScript ('unsafe-inline').\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "MDN Web Docs",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection"
                },
                {
                    "name": "OWASP Security Headers Project | X-XSS-Protection",
                    "url": "https://owasp.org/www-project-secure-headers/#x-xss-protection"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0002",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0002",
                    "tactic": "Execution",
                    "description": "The adversary is trying to run malicious code.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0012",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0012",
                    "data_source": "Script",
                    "description": "A file or stream containing a list of commands, allowing them to be launched in sequence\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1203",
                    "technique_url": "https://attack.mitre.org/techniques/T1203",
                    "technique": "Exploitation for Client Execution",
                    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1592",
                    "technique_url": "https://attack.mitre.org/techniques/T1592",
                    "technique": "Gather Victim Host Information",
                    "technique_description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n",
                    "sub_technique_id": "004",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1592/004",
                    "sub_technique": "Client Configurations",
                    "sub_technique_description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 20
        },
        {
            "rule_id": 1,
            "name": "Basic Constraints Extension valid path length",
            "key": "basic_constraints_path_length",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "Path length gives the maximum number of intermediate certificates that may follow the root CA certificate typically (or certificate otherwise specifying the constraint) in a valid certification path.\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "RFC 5280 - Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile",
                    "url": "https://datatracker.ietf.org/doc/html/rfc5280"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 2,
            "name": "Known exploited and deprecated CBC ciphers offered",
            "key": "cbc_cipher_offered",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "See ROBOT vulnerability\n",
            "metadata": {
                "offered_cbc_ciphers": "ECDHE-PSK-AES256-CBC-SHA384 DHE-PSK-AES256-CBC-SHA384 RSA-PSK-AES256-CBC-SHA DHE-PSK-AES128-CBC-SHA DHE-PSK-AES256-CBC-SHA RSA-PSK-AES128-CBC-SHA SRP-AES-256-CBC-SHA SRP-RSA-AES-256-CBC-SHA ECDHE-PSK-AES128-CBC-SHA256 SRP-AES-128-CBC-SHA ECDHE-PSK-AES128-CBC-SHA SRP-RSA-AES-128-CBC-SHA PSK-AES128-CBC-SHA256 RSA-PSK-AES256-CBC-SHA384 RSA-PSK-AES128-CBC-SHA256 PSK-AES256-CBC-SHA384 DHE-PSK-AES128-CBC-SHA256 ECDHE-PSK-AES256-CBC-SHA PSK-AES256-CBC-SHA PSK-AES128-CBC-SHA"
            },
            "cve": [
                "CVE-2012-4929"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
            "references": [
                {
                    "name": "CERT/CC",
                    "url": "https://www.kb.cert.org/vuls/id/144389"
                },
                {
                    "name": "ROBOT Proof of Concept",
                    "url": "https://github.com/robotattackorg/robot-detect"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -200
        },
        {
            "rule_id": 8,
            "name": "Client initiated TLS renegotiation",
            "key": "client_renegotiation",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Not Detected",
            "description": "Server accepts client-initiated insecure renegotiation, numerous exploits exists and many have been assigned CVE\n",
            "metadata": {},
            "cve": [
                "CVE-2009-3555",
                "CVE-2011-1473",
                "CVE-2011-5094",
                "CVE-2021-3449"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:N/I:N/A:C",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "references": [
                {
                    "name": "RFC 5746 - Transport Layer Security Renegotiation Indication Extension",
                    "url": "https://datatracker.ietf.org/doc/html/rfc5746"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 9,
            "name": "Deprecated TLS protocol negotiated",
            "key": "deprecated_protocol_negotiated",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "When information is sent between the client and the server, it must be encrypted and protected in order to prevent an attacker from being able to read or modify it This is most commonly done using HTTPS, which uses the Transport Layer Security (TLS) protocol, a replacement for the deprecated Secure Socket Layer (SSL) protocol By default, most servers still support outdated and known vulnerable protocols, typically for backwards compatibility with equally outdated web browser software This is known as an insecure default and could lead to trivial attacks against default or misconfigured servers\n",
            "metadata": {},
            "cve": [
                "CVE-2014-8730",
                "CVE-2014-0160",
                "CVE-2009-3555"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:C/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "references": [
                {
                    "name": "Testing for Weak SSL TLS Ciphers Insufficient Transport Layer Protection (WSTG-CRYP-01)",
                    "url": "https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/01-Testing_for_Weak_Transport_Layer_Security"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 11,
            "name": "Downgrade attack prevention (SCSV)",
            "key": "fallback_scsv",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The TLS Signaling Cipher Suite Value (SCSV) protects against TLS/SSL downgrade attacks. If enabled, the server makes sure that the strongest protocol that both client and server understand is used. Attackers can make a client attempt weaker TLS connections and exploit all the vulnerabilities associated with a given protocol",
            "metadata": {},
            "cve": [
                "CVE-2014-3566",
                "CVE-2014-8730"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N",
            "references": [
                {
                    "name": "RFC 7507 - TLS Fallback Signaling Cipher Suite Value (SCSV) for Preventing Protocol Downgrade Attacks",
                    "url": "https://datatracker.ietf.org/doc/html/rfc7507"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -100
        },
        {
            "rule_id": 12,
            "name": "Negotiated cipher applies Forward Anonymity (aka PFS)",
            "key": "forward_anonymity",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Forward Anonymity, frequently and mistakenly described as Perfect Forward Secrecy (PFS), is where the TLS connection applies technical mechanisms intentionally that will not expose any unique client identifier that might be used by a server (TLS termination endpoint) for the purposes of user profiling and tracking. This is not the same as applying 'secrecy' or privacy to the contents of your TLS connection, the mechanism is designed only for identity protection a.k.a Anonymity - which is an entirely distinct concept from secrecy. If the TLS connection does not use a cipher that offer the Forward Anonymity anonymity characteristic, the client identity can be tracked for any purpose the server (or Attacker in-the-middle) might choose, with no possibility of the client protecting themselves.\n",
            "metadata": {},
            "cve": null,
            "cvss2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "references": [
                {
                    "name": "Eyal Ronen and Adi Shamir - Critical Review of Imperfect Forward Secrecy",
                    "url": "http://www.wisdom.weizmann.ac.il/~eyalro/RonenShamirDhReview.pdf"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                }
            ],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -100
        },
        {
            "rule_id": 13,
            "name": "Known weak ciphers negotiated ECDHE-RSA-AES128-GCM-SHA256 (128 bits)",
            "key": "known_weak_cipher_negotiated",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "A cipher suite is a combination of authentication, encryption, and message authentication code (MAC) algorithms They are used during the negotiation of security settings for a TLS/SSL connection as well as for the transfer of data By default, most servers still support outdated and known vulnerable ciphers This is known as an insecure default and could lead to trivial attacks against default or misconfigured servers\n",
            "metadata": {
                "negotiated_cipher": "ECDHE-RSA-AES128-GCM-SHA256",
                "negotiated_cipher_bits": 128
            },
            "cve": [
                "CVE-2014-6321",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:C/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "references": [
                {
                    "name": "Testing for Weak SSL TLS Ciphers Insufficient Transport Layer Protection (WSTG-CRYP-01)",
                    "url": "https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/01-Testing_for_Weak_Transport_Layer_Security"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "NIST SP800-131A",
                    "version": "transition mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 14,
            "name": "Known weak ciphers offered",
            "key": "known_weak_cipher_offered",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "A cipher suite is a combination of authentication, encryption, and message authentication code (MAC) algorithms They are used during the negotiation of security settings for a TLS/SSL connection as well as for the transfer of data By default, most servers still support outdated and known vulnerable ciphers This could lead to trivial attacks against default or misconfigured servers\n",
            "metadata": {
                "offered_weak_ciphers": "PSK-AES256-GCM-SHA384 DHE-RSA-CHACHA20-POLY1305 ECDHE-PSK-AES256-CBC-SHA384 DHE-PSK-AES128-GCM-SHA256 AES256-GCM-SHA384 TLS_AES_128_GCM_SHA256 DHE-PSK-AES256-CBC-SHA384 RSA-PSK-AES256-CBC-SHA DHE-PSK-CHACHA20-POLY1305 DHE-PSK-AES128-CBC-SHA DHE-PSK-AES256-CBC-SHA PSK-AES128-GCM-SHA256 ECDHE-RSA-CHACHA20-POLY1305 TLS_CHACHA20_POLY1305_SHA256 RSA-PSK-CHACHA20-POLY1305 ECDHE-RSA-AES256-SHA ECDHE-ECDSA-CHACHA20-POLY1305 RSA-PSK-AES256-GCM-SHA384 TLS_AES_256_GCM_SHA384 RSA-PSK-AES128-CBC-SHA DHE-RSA-AES256-SHA SRP-AES-256-CBC-SHA ECDHE-ECDSA-AES256-SHA RSA-PSK-AES128-GCM-SHA256 SRP-RSA-AES-256-CBC-SHA AES256-SHA ECDHE-PSK-AES128-CBC-SHA256 ECDHE-PSK-AES128-CBC-SHA SRP-AES-128-CBC-SHA PSK-AES256-CBC-SHA AES128-SHA256 SRP-RSA-AES-128-CBC-SHA ECDHE-RSA-AES128-SHA AES128-SHA PSK-CHACHA20-POLY1305 PSK-AES128-CBC-SHA256 RSA-PSK-AES256-CBC-SHA384 RSA-PSK-AES128-CBC-SHA256 ECDHE-ECDSA-AES128-SHA DHE-RSA-AES128-SHA AES256-SHA256 DHE-PSK-AES256-GCM-SHA384 ECDHE-PSK-AES256-CBC-SHA AES128-GCM-SHA256 DHE-PSK-AES128-CBC-SHA256 ECDHE-PSK-CHACHA20-POLY1305 PSK-AES256-CBC-SHA384 PSK-AES128-CBC-SHA"
            },
            "cve": [
                "CVE-2014-6321",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:C/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "references": [
                {
                    "name": "Testing for Weak SSL TLS Ciphers Insufficient Transport Layer Protection (WSTG-CRYP-01)",
                    "url": "https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/01-Testing_for_Weak_Transport_Layer_Security"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "NIST SP800-131A",
                    "version": "transition mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -200
        },
        {
            "rule_id": 15,
            "name": "TLS Long Handshake Intolerance",
            "key": "long_handshake_intolerance",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "If the Client Hello messages longer than 255 bytes and the connection fails, this is an indication of very old web servers or a webserver with coding errors/bugs. Using all possible valid ciphers (sending approx 3458 bytes) the 'Client Hello' will be sufficiently long to trigger this web server bug (if it exists). This may be experienced during server to server communications over TLS, but is uncommon scenario for web browsers (that affect end users).\n",
            "metadata": {
                "long_handshake_intolerance_versions": []
            },
            "cve": null,
            "cvss2": "",
            "cvss3": "",
            "references": [
                {
                    "name": "RFC 5246 - The Transport Layer Security (TLS) Protocol Version 1.2",
                    "url": "https://datatracker.ietf.org/doc/html/rfc5246"
                },
                {
                    "name": "RFC 8446 - The Transport Layer Security (TLS) Protocol Version 1.3",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8446"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 50
        },
        {
            "rule_id": 16,
            "name": "Only strong ciphers offered",
            "key": "only_strong_ciphers_offered",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "Cipher negotiation can be manipulated by the client requester if an unwitting server configuration has not been defined defensively. Not having negotiated a strong cipher is an indication of server willingly downgrading security when any anonymous requester simply asks it to. By not providing any ciphers that are previously or theoretically suspected to be weak, you future-proof software security to the best current standard.\n",
            "metadata": {
                "offered_strong_ciphers": "ECDHE-RSA-AES256-SHA384 ECDHE-ECDSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES256-SHA256 DHE-RSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA256 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA256"
            },
            "cve": [
                "CVE-2014-6321",
                "CVE-2008-0166"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:C/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "references": [
                {
                    "name": "Mozilla SSL Configuration Generator",
                    "url": "https://ssl-config.mozilla.org/"
                },
                {
                    "name": "Measuring the Security Harm of TLS Crypto Shortcuts",
                    "url": "https://dl.acm.org/doi/10.1145/2987443.2987480"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 17,
            "name": "Known exploited and deprecated RC4 ciphers offered",
            "key": "rc4_cipher_offered",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "See ROBOT vulnerability\n",
            "metadata": {
                "offered_rc4_ciphers": ""
            },
            "cve": [
                "CVE-2012-4929"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:P/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N",
            "references": [
                {
                    "name": "CERT/CC",
                    "url": "https://www.kb.cert.org/vuls/id/144389"
                },
                {
                    "name": "ROBOT Proof of Concept",
                    "url": "https://github.com/robotattackorg/robot-detect"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 75
        },
        {
            "rule_id": 18,
            "name": "Secure Renegotiation",
            "key": "secure_renegotiation",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "Client initiated TLS renegotiation allows attackers to leverage known exploits for lower protocols, prevention is possible when implementing Secure Renegotiation described in RFC-5746 section 3.3 implemented using the renegotiation_info extension or the spurious cipher TLS_EMPTY_RENEGOTIATION_INFO_SCSV",
            "metadata": {},
            "cve": [
                "CVE-2009-3555",
                "CVE-2011-1473",
                "CVE-2011-5094",
                "CVE-2021-3449"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:N/I:N/A:C",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "references": [
                {
                    "name": "RFC 5746 - Transport Layer Security Renegotiation Indication Extension",
                    "url": "https://datatracker.ietf.org/doc/html/rfc5746"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -120
        },
        {
            "rule_id": 19,
            "name": "Session resumption caching",
            "key": "session_resumption_caching",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "The TLS session cache fails to reliably prevent resumption of an unauthenticated session, which allows remote attackers (such as malicious 802.1X supplicants) to bypass authentication for various software depending on their implementation configurations. Other issues arise when TLS session resumption is enabled and a client certificate is used, subsequent connection attempts to the same server get a previously authenticated session 'resumed' without actually Authenticating with their own client Certificate.\n",
            "metadata": {},
            "cve": [
                "CVE-2017-9148",
                "CVE-2016-5419",
                "CVE-2017-7468"
            ],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Measuring the Security Harm of TLS Crypto Shortcuts",
                    "url": "https://dl.acm.org/doi/10.1145/2987443.2987480"
                },
                {
                    "name": "Session Resumption Protocols and Efficient Forward Security for TLS 1.3 0-RTT",
                    "url": "https://link.springer.com/article/10.1007/s00145-021-09385-0"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -100
        },
        {
            "rule_id": 20,
            "name": "Session resumption ticket hints",
            "key": "session_resumption_ticket_hint",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "Depending on your specific application, and how important the history of your network interaction may be, you may want to forego TLS session resumption altogether. Long session gaps can give bad actors time to hack into a session and cause trouble. This is why session IDs and session tickets both have security timeout settings that are dictated by the server. When an ID or a ticket expires, the server intentionally flushes cached session data and forces a complete new session handshake when the client initiates the next contact. Leaking any information for attackers to derive ways to weaken TLS results in ineffective data protection or broken integrity of communications.\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Networking 101 Published by O'Reilly Media",
                    "url": "https://hpbn.co/transport-layer-security-tls/#tls-session-resumption"
                },
                {
                    "name": "Measuring the Security Harm of TLS Crypto Shortcuts",
                    "url": "https://dl.acm.org/doi/10.1145/2987443.2987480"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -100
        },
        {
            "rule_id": 21,
            "name": "Session resumption tickets",
            "key": "session_resumption_tickets",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Misconfigured",
            "description": "The session ticket mechanism is referred to as the stateless resumption mechanism. In 2018 security researchers from the University of Hamburg published a paper describing a new method that websites could use to track browser users\u2019 history.\n",
            "metadata": {},
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Tracking users across the web via TLS Session Resumption",
                    "url": "https://svs.informatik.uni-hamburg.de/publications/2018/2018-12-06-Sy-ACSAC-Tracking_Users_across_the_Web_via_TLS_Session_Resumption.pdf"
                },
                {
                    "name": "Measuring the Security Harm of TLS Crypto Shortcuts",
                    "url": "https://dl.acm.org/doi/10.1145/2987443.2987480"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1008",
                    "technique_url": "https://attack.mitre.org/techniques/T1008",
                    "technique": "Fallback Channels",
                    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "WARN!",
            "result_level": "warn",
            "score": -100
        },
        {
            "rule_id": 22,
            "name": "Strong ciphers negotiated",
            "key": "strong_cipher_negotiated",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "Cipher negotiation can be manipulated by the client requester if an unwitting server configuration has not been defined defensively. Not having negotiated a strong cipher is an indication of server willingly downgrading security when any anonymous requester simply asks it to. This is not a mere exploit, it is simply showing the inherent weakness in the server configuration.\n",
            "metadata": {},
            "cve": [
                "CVE-2014-6321"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:C/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "references": [
                {
                    "name": "Mozilla SSL Configuration Generator",
                    "url": "https://ssl-config.mozilla.org/"
                },
                {
                    "name": "Measuring the Security Harm of TLS Crypto Shortcuts",
                    "url": "https://dl.acm.org/doi/10.1145/2987443.2987480"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 150
        },
        {
            "rule_id": 23,
            "name": "Strong ciphers offered",
            "key": "strong_cipher_offered",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "Winshock vulnerability in 2014 was the first real example of issues arising when the available ciphers were not sufficient to secure communications years after the software was released. While ciphers supported by software at the time of release may be sufficient at the time of release, that software must be updated to support newer and stronger ciphers as they become available and not wait for the ciphers supported to be proven weak via an exploit.\n",
            "metadata": {},
            "cve": [
                "CVE-2014-6321"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:C/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "references": [
                {
                    "name": "Mozilla SSL Configuration Generator",
                    "url": "https://ssl-config.mozilla.org/"
                },
                {
                    "name": "Measuring the Security Harm of TLS Crypto Shortcuts",
                    "url": "https://dl.acm.org/doi/10.1145/2987443.2987480"
                }
            ],
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "4.1",
                    "description": "Use strong encryption and security protocols to protect sensitive cardholder data during transmission over open, public networks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "1.2.6",
                    "description": "Security features are defined and implemented for all services, protocols, and ports that are in use and considered to be insecure, such that the risk is mitigated"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.4",
                    "description": "Only necessary services, protocols, daemons, and functions are enabled, and all unnecessary functionality is removed or disabled.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "2.2.5",
                    "description": "If any insecure services, protocols, or daemons are present: - Business justification is documented. - Additional security features are documented and implemented that reduce the risk of using insecure services, protocols, or daemons.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "12.3.3",
                    "description": "Cryptographic cipher suites and protocols in use are documented and reviewed at least once every 12 months, including at least the following: - An up-to-date inventory of all cryptographic cipher suites and protocols in use, including purpose and where used. - Active monitoring of industry trends regarding continued viability of all cryptographic cipher suites and protocols in use. - A documented strategy to respond to anticipated changes in cryptographic vulnerabilities. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 100
        },
        {
            "rule_id": 24,
            "name": "ROBOT Vulnerability",
            "key": "tls_robot",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": false,
            "result_label": "Good Configuration",
            "description": "Timing attack causing padding errors using RSA with PKCS#1 v1.5 session keys allowing any attacker to passively record traffic and later decrypt it\n",
            "metadata": {
                "tls_robot": "Identical results (The server sends an Alert after ClientHello), no working oracle found"
            },
            "cve": [
                "CVE-2012-5081",
                "CVE-2016-6883",
                "CVE-2017-6168",
                "CVE-2017-17382",
                "CVE-2017-17427",
                "CVE-2017-17428",
                "CVE-2017-12373",
                "CVE-2017-13098",
                "CVE-2017-1000385",
                "CVE-2017-13099",
                "CVE-2017-17841",
                "CVE-2018-1388",
                "CVE-2018-5762",
                "CVE-2017-18268",
                "CVE-2017-15533",
                "CVE-2018-9192",
                "CVE-2018-9194"
            ],
            "cvss2": "AV:N/AC:H/Au:N/C:C/I:N/A:N",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:W/RC:C",
            "references": [
                {
                    "name": "CERT/CC",
                    "url": "https://www.kb.cert.org/vuls/id/144389"
                },
                {
                    "name": "Proof of Concept",
                    "url": "https://github.com/robotattackorg/robot-detect"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://www.robotattack.org/"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "http://archiv.infsec.ethz.ch/education/fs08/secsem/bleichenbacher98.pdf"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://eprint.iacr.org/2003/052"
                },
                {
                    "name": "Disclosure Paper",
                    "url": "https://www.nds.rub.de/media/nds/veroeffentlichungen/2015/08/21/Tls13QuicAttacks.pdf"
                }
            ],
            "compliance": [
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.4",
                    "description": "Unsecured communications need to be handled with coding techniques that properly encrypt all sensitive communications."
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.6",
                    "description": "Constantly address new threats and vulnerabilities for Internet-facing web applications and ensure that these applications are protected from known attacks"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.1",
                    "description": "For public-facing web applications, new threats and vulnerabilities are addressed on an ongoing basis and these applications are protected against known attacks as follows: - Reviewing public-facing web applications via manual or automated application vulnerability security assessment tools or methods as follows: - At least once every 12 months and after significant changes. - By an entity that specializes in application security. - Including, at a minimum, all common software attacks in Requirement 6.2.4. - All vulnerabilities are ranked in accordance with requirement 6.3.1. - All vulnerabilities are corrected. - The application is re-evaluated after the corrections OR - Installing an automated technical solution(s) that continually detects and prevents web-based attacks as follows: - Installed in front of public-facing web applications to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement will be superseded by Requirement 6.4.2 after 31 March 2025 when Requirement 6.4.2 becomes effective.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.4.2",
                    "description": "For public-facing web applications, an automated technical solution is deployed that continually detects and prevents web-based attacks, with at least the following: - Is installed in front of public-facing web applications and is configured to detect and prevent web-based attacks. - Actively running and up to date as applicable. - Generating audit logs. - Configured to either block web-based attacks or generate an alert that is immediately investigated. Note: This requirement is a best practice until 31 March 2025, after which it will be required and must be fully considered during a PCI DSS assessment. This new requirement will replace Requirement 6.4.1 once its effective date is reached.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0007",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0007",
                    "tactic": "Discovery",
                    "description": "The adversary is trying to figure out your environment.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0006",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0006",
                    "data_source": "Web Credential",
                    "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1134",
                    "technique_url": "https://attack.mitre.org/techniques/T1134",
                    "technique": "Access Token Manipulation",
                    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1134/001",
                    "sub_technique": "Token Impersonation/Theft",
                    "sub_technique_description": "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1087",
                    "technique_url": "https://attack.mitre.org/techniques/T1087",
                    "technique": "Account Discovery",
                    "technique_description": "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1087/002",
                    "sub_technique": "Domain Account",
                    "sub_technique_description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1119",
                    "technique_url": "https://attack.mitre.org/techniques/T1119",
                    "technique": "Automated Collection",
                    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1185",
                    "technique_url": "https://attack.mitre.org/techniques/T1185",
                    "technique": "Browser Session Hijacking",
                    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1584",
                    "technique_url": "https://attack.mitre.org/techniques/T1584",
                    "technique": "Compromise Infrastructure",
                    "technique_description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n",
                    "sub_technique_id": "006",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1584/006",
                    "sub_technique": "Web Services",
                    "sub_technique_description": "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "technique_description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n",
                    "sub_technique_id": "005",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1556/005",
                    "sub_technique": "Reversible Encryption",
                    "sub_technique_description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1550",
                    "technique_url": "https://attack.mitre.org/techniques/T1550",
                    "technique": "Use Alternate Authentication Material",
                    "technique_description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1550/001",
                    "sub_technique": "Application Access Token",
                    "sub_technique_description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 120
        },
        {
            "rule_id": 25,
            "name": "Valid Certificate Chain",
            "key": "valid_certificate_chain",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Good Configuration",
            "description": "The chain terminates with a Root CA Certificate. The Root CA Certificate is always signed by the CA itself. The signatures of all certificates in the chain must be verified up to the Root CA Certificate. Each certificate in the chain is checked to ensure it is not expired and the chain path is complete. When the root certificates are available in trust-store, this script will use its public key to verify the root certificate, once it verifies it will verify trust the intermediate certificate and eventually the server (leaf) certificate to complete the chain. Only one valid chain from trusted root to the leaf certificate is needed to be compatible with web browsers, however the entire certificate chain should be valid to be considered trustworthy as any compromised certificate in any chain would allow malicious attackers to sign a leaf certificate which would be considered valid in the parallel chain.\n",
            "metadata": {
                "key_usage": [
                    "digital_signature",
                    "key_encipherment"
                ],
                "extended_key_usage": [
                    "server_auth"
                ],
                "chain_validation_result": "Validated: digital_signature,key_encipherment,server_auth"
            },
            "cve": [
                "CVE-2020-8987",
                "CVE-2020-0601",
                "CVE-2020-14154",
                "CVE-2016-7075",
                "CVE-2021-23028",
                "CVE-2015-4680",
                "CVE-2015-1793",
                "CVE-2002-0828",
                "CVE-2002-0970",
                "CVE-2002-1183",
                "CVE-2002-0862",
                "CVE-2002-1407",
                "CVE-2009-0653"
            ],
            "cvss2": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
            "cvss3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "references": null,
            "compliance": [
                {
                    "compliance": "NIST SP800-131A",
                    "version": "strict mode"
                },
                {
                    "compliance": "NIST SP800-131A",
                    "version": "transition mode"
                },
                {
                    "compliance": "FIPS 140-2",
                    "version": "Annex A"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "3.5",
                    "description": "Create and implement procedures to protect the keys used to protect stored cardholder data from disclosure and misuse"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "3.2.1",
                    "requirement": "6.5.3",
                    "description": "Insecure cryptographic storage should be handled with the following coding techniques: - Cryptographic flaws must be prevented. - Strong cryptographic algorithms and keys should be used.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "4.2.1",
                    "description": "Strong cryptography and security protocols are implemented as follows to safeguard PAN during transmission over open, public networks: - Only trusted keys and certificates are accepted. - Certificates used to safeguard PAN during transmission over open, public networks are confirmed as valid and are not expired or revoked. This bullet is a best practice until 31 March 2025, after which it will be required as part of Requirement 4.2.1 and must be fully considered during a PCI DSS assessment. - The protocol in use supports only secure versions or configurations and does not support fallback to, or use of insecure versions, algorithms, key sizes, or implementations. - The encryption strength is appropriate for the encryption methodology in use.\n"
                },
                {
                    "compliance": "PCI DSS",
                    "version": "4.0",
                    "requirement": "6.2.4",
                    "description": "Software engineering techniques or other methods are defined and in use by software development personnel to prevent or mitigate common software attacks and related vulnerabilities in bespoke and custom software, including but not limited to the following: - Injection attacks, including SQL, LDAP, XPath, or other command, parameter, object, fault, or injection-type flaws. - Attacks on data and data structures, including attempts to manipulate buffers, pointers, input data, or shared data. - Attacks on cryptography usage, including attempts to exploit weak, insecure, or inappropriate cryptographic implementations, algorithms, cipher suites, or modes of operation. - Attacks on business logic, including attempts to abuse or bypass application features and functionalities through the manipulation of APIs, communication protocols and channels, client-side functionality, or other system/application functions and resources. This includes cross-site scripting (XSS) and cross-site request forgery (CSRF). - Attacks on access control mechanisms, including attempts to bypass or abuse identification, authentication, or authorization mechanisms, or attempts to exploit weaknesses in the implementation of such mechanisms. - Attacks via any \"high-risk\" vulnerabilities identified in the vulnerability identification process, as defined in Requirement 6.3.1.\n"
                }
            ],
            "threats": [
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0043",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0043",
                    "tactic": "Reconnaissance",
                    "description": "The adversary is trying to gather information they can use to plan future operations.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0006",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0006",
                    "tactic": "Credential Access",
                    "description": "The adversary is trying to steal account names and passwords.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "tactic_id": "TA0009",
                    "tactic_url": "https://attack.mitre.org/tactics/TA0009",
                    "tactic": "Collection",
                    "description": "The adversary is trying to gather data of interest to their goal.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0037",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0037",
                    "data_source": "Certificate",
                    "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0035",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0035",
                    "data_source": "Internet Scan",
                    "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0028",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0028",
                    "data_source": "Logon Session",
                    "description": "Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "data_source_id": "DS0029",
                    "data_source_url": "https://attack.mitre.org/datasources/DS0029",
                    "data_source": "Network Traffic",
                    "description": "Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1595",
                    "technique_url": "https://attack.mitre.org/techniques/T1595",
                    "technique": "Active Scanning",
                    "technique_description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1595/002",
                    "sub_technique": "Vulnerability Scanning",
                    "sub_technique_description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1071",
                    "technique_url": "https://attack.mitre.org/techniques/T1071",
                    "technique": "Application Layer Protocol",
                    "technique_description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1071/001",
                    "sub_technique": "Web Protocols",
                    "sub_technique_description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1565",
                    "technique_url": "https://attack.mitre.org/techniques/T1565",
                    "technique": "Data Manipulation",
                    "technique_description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n",
                    "sub_technique_id": "002",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1565/002",
                    "sub_technique": "Transmitted Data Manipulation",
                    "sub_technique_description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1189",
                    "technique_url": "https://attack.mitre.org/techniques/T1189",
                    "technique": "Drive-by Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1190",
                    "technique_url": "https://attack.mitre.org/techniques/T1190",
                    "technique": "Exploit Public-Facing Application",
                    "description": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1212",
                    "technique_url": "https://attack.mitre.org/techniques/T1212",
                    "technique": "Exploitation for Credential Access",
                    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1590",
                    "technique_url": "https://attack.mitre.org/techniques/T1590",
                    "technique": "Gather Victim Network Information",
                    "technique_description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n",
                    "sub_technique_id": "001",
                    "sub_technique_url": "https://attack.mitre.org/techniques/T1590/001",
                    "sub_technique": "Domain Properties",
                    "sub_technique_description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1556",
                    "technique_url": "https://attack.mitre.org/techniques/T1556",
                    "technique": "Modify Authentication Process",
                    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1528",
                    "technique_url": "https://attack.mitre.org/techniques/T1528",
                    "technique": "Steal Application Access Token",
                    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1539",
                    "technique_url": "https://attack.mitre.org/techniques/T1539",
                    "technique": "Steal Web Session Cookie",
                    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n"
                },
                {
                    "standard": "MITRE ATT&CK",
                    "version": "11.2",
                    "technique_id": "T1600",
                    "technique_url": "https://attack.mitre.org/techniques/T1600",
                    "technique": "Weaken Encryption",
                    "description": "Adversaries may compromise a network device's encryption capability in order to bypass encryption that would otherwise protect data communications.\n"
                }
            ],
            "result_color": null,
            "result_text": "PASS!",
            "result_level": "pass",
            "score": 120
        },
        {
            "rule_id": 26,
            "name": "TLS Version Interference",
            "key": "version_interference",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "When a web browser reports an error that describes Version Interference (e.g. Chrome ERR_SSL_VERSION_INTERFERENCE), this indicates that the we browser on the user's system has attempted to negotiate a TLS connection with the web server using a TLS version which is not known by the web server. This is typically seen when new TLS versions are in draft status, recently released, or an attacker in-the-middle is present and altering the TLS negotiation. This error is widely misunderstood to be an issue with the web browser, but it is merely a symptom that appears in the web browser when the root cause of this problem exists with the web server (or introduced by an attacker). An outdated version (or misconfigured e.g. CORS header) of web server introduces TLS Version Interference errors for which it may be possible to change web browsers entirely (or upgrade/downgrade) to avoid the issues with the web server.\n",
            "metadata": {
                "tls_version_interference_versions": [
                    "SSLv2 (0x2ff)",
                    "TLSv1 (0x301)",
                    "SSLv3 (0x300)",
                    "TLSv1.1 (0x302)"
                ]
            },
            "cve": null,
            "cvss2": "",
            "cvss3": "",
            "references": [
                {
                    "name": "RFC 5246 - The Transport Layer Security (TLS) Protocol Version 1.2",
                    "url": "https://datatracker.ietf.org/doc/html/rfc5246"
                },
                {
                    "name": "RFC 8446 - The Transport Layer Security (TLS) Protocol Version 1.3",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8446"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -80
        },
        {
            "rule_id": 27,
            "name": "TLS Version Intolerance",
            "key": "version_intolerance",
            "group_id": 1,
            "group": "tls_negotiation",
            "result_value": true,
            "result_label": "Vulnerable",
            "description": "Many web servers are not fully compliant with TLS and may not properly negotiate a TLS version that both the client (web browser) and server support. E.g. when a client advertises support for \"TLS 1.3\" the web server may drop the connection (not respond correctly with the TLS version it supports). This is a common web server coding error/bug; The symptom is presented to the user in a web browser by an error message related to \"we can not reach this website\" (or similar).\n",
            "metadata": {
                "tls_version_intolerance_versions": [
                    "TLSv2 (0x400)",
                    "TLSv2.1 (0x401)",
                    "TLSv1.8 (0x309)",
                    "TLSv2.3 (0x404)",
                    "TLSv1.4 (0x305)"
                ]
            },
            "cve": null,
            "cvss2": "",
            "cvss3": "",
            "references": [
                {
                    "name": "RFC 5246 - The Transport Layer Security (TLS) Protocol Version 1.2",
                    "url": "https://datatracker.ietf.org/doc/html/rfc5246"
                },
                {
                    "name": "RFC 8446 - The Transport Layer Security (TLS) Protocol Version 1.3",
                    "url": "https://datatracker.ietf.org/doc/html/rfc8446"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": -50
        },
        {
            "rule_id": 5,
            "name": "FIPS 140-2 Annex A",
            "key": "fips_annex_a",
            "group_id": 3,
            "group": "compliance",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "This is specifically for evaluating if the TLS connection only offers allowed cipher suites. The FIPS 140-2 states that approved security function is either specified in the list of approved functions (which is Annex A), or specified in a Federal Information Processing Standard (FIPS). FIPS 140-2 Implementation Guide states that DES (formally DEA) is not approved since May 19, 2007, however note the list of FIPS-140 validated modules I can see that DES is listed only in other algorithms section. Triple-DES or 3DES (formally TDEA, not single DES or DEA) was reissued as a special publication (SP800-67) and that SP is referenced by 140-2 IG and 140-2 Annex A.\n",
            "metadata": {
                "FIPS 140-2 Annex A non-compliance ciphers": [
                    "TLS_AES_128_GCM_SHA256",
                    "TLS_AES_256_GCM_SHA384",
                    "TLS_CHACHA20_POLY1305_SHA256",
                    "TLS_DHE_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256",
                    "TLS_DHE_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384",
                    "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                    "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                    "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_PSK_WITH_AES_128_GCM_SHA256",
                    "TLS_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_PSK_WITH_AES_256_GCM_SHA384",
                    "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_RSA_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256",
                    "TLS_RSA_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384",
                    "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_SRP_SHA_WITH_AES_128_CBC_SHA",
                    "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"
                ],
                "FIPS 140-2 Annex A violations": [
                    "Offered non-compliance ciphers"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "Annex A - Approved Security Functions for FIPS PUB 140-2, Security Requirements for Cryptographic Modules",
                    "url": "https://csrc.nist.gov/publications/detail/fips/140/2/final"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": 0
        },
        {
            "rule_id": 4,
            "name": "NIST SP800-131A (strict mode)",
            "key": "nist_strict",
            "group_id": 3,
            "group": "compliance",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "SP 800-131A provides specific guidance for transitions to the use of stronger cryptographic keys and more robust algorithms. This strengthens security by defining stronger cryptographic keys and more robust algorithms. The standard defines a period to allow customers time to make the transition to the new requirements. The transition period closed at the end of 2013.\n",
            "metadata": {
                "NIST SP800-131A (strict mode) non-compliant ciphers": [
                    "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
                    "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
                    "TLS_RSA_WITH_AES_128_GCM_SHA256",
                    "TLS_RSA_WITH_AES_256_GCM_SHA384"
                ],
                "NIST SP800-131A (strict mode) violations": [
                    "Deprecated OCSP Hash Algorithm",
                    "Known Weak RSA public key exponent 3",
                    "OCSP Must Staple Extension",
                    "curve secp256r1 MUST be used for AES128 ciphers",
                    "OCSP Stapling Extension",
                    "non-compliant cipher offered",
                    "Known Weak key usage RSA-2048"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "SP 800-131A Rev. 2 - Transitioning the Use of Cryptographic Algorithms and Key Lengths",
                    "url": "https://csrc.nist.gov/publications/detail/sp/800-131a/rev-2/final"
                },
                {
                    "name": "FIPS 186-4 - Digital Signature Standard (DSS)",
                    "url": "http://dx.doi.org/10.6028/NIST.FIPS.186-4"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": 0
        },
        {
            "rule_id": 3,
            "name": "FIPS 140-2 (NIST SP800-131A transition mode)",
            "key": "nist_transition",
            "group_id": 3,
            "group": "compliance",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "The transition period closed at the end of 2013. The transitioning of cryptographic algorithms and key lengths to stronger cryptographic keys and more robust algorithms as recommended in NIST SP800-131A. A product or implementation does not meet the FIPS 140-2 applicability requirements by simply implementing an Approved security function and acquiring validations for each of the implemented algorithms (check references for the list)\n",
            "metadata": {
                "FIPS 140-2 (NIST SP800-131A transition mode) non-compliant ciphers": [
                    "TLS_AES_128_GCM_SHA256",
                    "TLS_AES_256_GCM_SHA384",
                    "TLS_CHACHA20_POLY1305_SHA256",
                    "TLS_DHE_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256",
                    "TLS_DHE_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384",
                    "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
                    "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
                    "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                    "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                    "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                    "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                    "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                    "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                    "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                    "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                    "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                    "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                    "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_PSK_WITH_AES_128_GCM_SHA256",
                    "TLS_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_PSK_WITH_AES_256_GCM_SHA384",
                    "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_RSA_PSK_WITH_AES_128_CBC_SHA",
                    "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256",
                    "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256",
                    "TLS_RSA_PSK_WITH_AES_256_CBC_SHA",
                    "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384",
                    "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384",
                    "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_RSA_WITH_AES_128_CBC_SHA256",
                    "TLS_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_RSA_WITH_AES_256_CBC_SHA256",
                    "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA",
                    "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA",
                    "TLS_SRP_SHA_WITH_AES_128_CBC_SHA",
                    "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"
                ],
                "FIPS 140-2 (NIST SP800-131A transition mode) violations": [
                    "non-compliant cipher offered"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "NIST maintained FIPS 140-2 Algorithm Validation lists - Cryptographic Algorithm Validation Program (CAVP)",
                    "url": "https://csrc.nist.rip/groups/STM/cavp/validation.html"
                },
                {
                    "name": "SP 800-131A Rev. 2 - Transitioning the Use of Cryptographic Algorithms and Key Lengths",
                    "url": "https://csrc.nist.gov/publications/detail/sp/800-131a/rev-2/final"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": 0
        },
        {
            "rule_id": 1,
            "name": "PCI DSS 3.2.1",
            "key": "pci_dss_3_2",
            "group_id": 3,
            "group": "compliance",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "While some requirements specify the correct evaluation in the Report on Compliance (ROC), regarding the proper configuration of TLS more broadly PCI DSS has the following guidance: > \"Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g. NIST SP 800-52 and SP 800-57, OWASP, etc.)\" Each evaluation that reports on PCI DSS 3.2.1 compliance includes references to publications and evidense to support the idea of general industry standardisation, for which is a term that is defined by these existinstance of these publications over time.\n",
            "metadata": {
                "PCI DSS 3.2.1 violations": [
                    "6.5.10",
                    "3.5",
                    "6.5.4",
                    "6.5.8",
                    "6.6",
                    "4.1",
                    "6.5.3",
                    "8.6"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "PCI DSS 3.2.1 standard",
                    "url": "https://docs-prv.pcisecuritystandards.org/PCI%20DSS/Standard/PCI_DSS_v3-2-1.pdf"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": 0
        },
        {
            "rule_id": 2,
            "name": "PCI DSS 4.0",
            "key": "pci_dss_4_0",
            "group_id": 3,
            "group": "compliance",
            "result_value": false,
            "result_label": "Misconfigured",
            "description": "In the prior versions the standard indicated that an organization had to use the latest version of SSL, or at least TLS 1.2. In the new standard that specific language has been removed in favor of general industry standards that change over time. Each evaluation that reports on PCI DSS 4.0 compliance includes references to publications and evidense to support the idea of general industry standardisation, for which is a term that is defined by these existinstance of these publications over time.\n",
            "metadata": {
                "PCI DSS 4.0 violations": [
                    "6.2.1",
                    "3.6.1",
                    "6.4.2",
                    "A2",
                    "4.2.1",
                    "2.2.4",
                    "2.2.7",
                    "4.2.2",
                    "2.2.5",
                    "3.3.3",
                    "3.5.1",
                    "12.3.3",
                    "1.2.6",
                    "6.2.4",
                    "11.6.1",
                    "8.3.2",
                    "3.3.2",
                    "6.4.1"
                ]
            },
            "cve": [],
            "cvss2": [],
            "cvss3": [],
            "references": [
                {
                    "name": "PCI DSS 4.0 standard - Report on Compliance",
                    "url": "https://docs-prv.pcisecuritystandards.org/PCI%20DSS/Reporting%20Template%20or%20Form/PCI-DSS-v4_0-ROC-Template.pdf"
                }
            ],
            "compliance": [],
            "threats": [],
            "result_color": null,
            "result_text": "FAIL!",
            "result_level": "fail",
            "score": 0
        }
    ],
    "tls": {
        "certificates": [
            {
                "authority_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "certification_authority_authorization": true,
                "dnssec": false,
                "dnssec_algorithm": null,
                "expired": false,
                "expiry_status": "Expires in 286 days",
                "extensions": [
                    {
                        "critical": false,
                        "name": "authorityKeyIdentifier",
                        "authorityKeyIdentifier": "59a4660652a07b95923ca394072796745bf93dd0",
                        "authority_cert_issuer": "",
                        "authority_cert_serial_number": null
                    },
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373"
                    },
                    {
                        "critical": false,
                        "name": "subjectAltName",
                        "subjectAltName": [
                            "trivialsec.com",
                            "*.trivialsec.com"
                        ]
                    },
                    {
                        "critical": true,
                        "name": "keyUsage",
                        "keyUsage": [
                            "digital_signature",
                            "key_encipherment"
                        ],
                        "digital_signature": true,
                        "content_commitment": false,
                        "key_encipherment": true,
                        "data_encipherment": false,
                        "key_agreement": false,
                        "key_cert_sign": false,
                        "crl_sign": false
                    },
                    {
                        "critical": false,
                        "name": "extendedKeyUsage",
                        "extendedKeyUsage": [
                            "serverAuth",
                            "clientAuth"
                        ]
                    },
                    {
                        "critical": false,
                        "name": "cRLDistributionPoints",
                        "cRLDistributionPoints": [
                            {
                                "full_name": "http://crl.sca1b.amazontrust.com/sca1b-1.crl",
                                "relative_name": null,
                                "reasons": null,
                                "crl_issuer": ""
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "certificatePolicies"
                    },
                    {
                        "critical": false,
                        "name": "authorityInfoAccess",
                        "authorityInfoAccess": [
                            {
                                "access_location": "http://ocsp.sca1b.amazontrust.com",
                                "access_method": "OCSP"
                            },
                            {
                                "access_location": "http://crt.sca1b.amazontrust.com/sca1b.crt",
                                "access_method": "caIssuers"
                            }
                        ]
                    },
                    {
                        "critical": true,
                        "name": "basicConstraints",
                        "ca": false,
                        "path_length": null
                    },
                    {
                        "critical": false,
                        "name": "signedCertificateTimestampList",
                        "signedCertificateTimestampList": [
                            {
                                "version": "v1",
                                "log_id": "adf7befa7cff10c88b9d3d9c1e3e186ab467295dcfb10c24ca858634ebdc828a",
                                "timestamp": "2022-07-31 07:28:03.617000",
                                "pre_certificate": true
                            },
                            {
                                "version": "v1",
                                "log_id": "b3737707e18450f86386d605a9dc11094a792db1670c0b87dcf0030e7936a59a",
                                "timestamp": "2022-07-31 07:28:02.909000",
                                "pre_certificate": true
                            },
                            {
                                "version": "v1",
                                "log_id": "b73efb24df9c4dba75f239c5ba58f46c5dfc42cf7a9f35c49e1d098125edb499",
                                "timestamp": "2022-07-31 07:28:02.845000",
                                "pre_certificate": true
                            }
                        ]
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=df2894c9454f12da8d20af63c5bd020ae7bbc739",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3Adf2894c9454f12da8d20af63c5bd020ae7bbc739",
                    "urlscan.io": "https://urlscan.io/search/#page.tlsIssuer%3A%22Amazon%22"
                },
                "is_self_signed": false,
                "issuer": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "issuer_common_name": "Amazon",
                "known_compromised": false,
                "md5_fingerprint": "d91445d39c29f62d7d4654046a2de7a0",
                "not_after": "2023-08-28T23:59:59",
                "not_before": "2022-07-31T00:00:00",
                "pem": "-----BEGIN CERTIFICATE-----\nMIIF4zCCBMugAwIBAgIQB9svchi0XpUQVuIlz/+7dzANBgkqhkiG9w0BAQsFADBG\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRUwEwYDVQQLEwxTZXJ2ZXIg\nQ0EgMUIxDzANBgNVBAMTBkFtYXpvbjAeFw0yMjA3MzEwMDAwMDBaFw0yMzA4Mjgy\nMzU5NTlaMBkxFzAVBgNVBAMTDnRyaXZpYWxzZWMuY29tMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAy2/Re6/BtNCRp73yEFqy/0CehydIazaox8JFuxdq\n0oLenVL9gur/HPl6JpkadTpHzRKKiDF1TNK+aHh+x4shNSu9YCnZemG1DygWIDLm\nzmLV1do5vV8TBtnZDlWjIuHj4eQa0CZRdH3hgRg9YBcaAeKX62dSgoBrMcjlvpmy\nsLs/SkPGb1Z3pMVOJUezzXksUkWCGdhL6tkzLkaXwbdzf7zuzBHhyIJ/l+uvmaEE\nuVFNASFDTGsoY0tqfZBsIEipBbwDP3aQ3jokCyUyyNNvSAnM0ukTp1OvHVu968cF\nN2xcxzrSHPMUayl6RCQ9qU0PXVbi5MPLxmmWPc+b6ReXHwIDAQABo4IC+DCCAvQw\nHwYDVR0jBBgwFoAUWaRmBlKge5WSPKOUByeWdFv5PdAwHQYDVR0OBBYEFJn87M4o\nKdMI/gpmVJH+QfKj5+NzMCsGA1UdEQQkMCKCDnRyaXZpYWxzZWMuY29tghAqLnRy\naXZpYWxzZWMuY29tMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcD\nAQYIKwYBBQUHAwIwPQYDVR0fBDYwNDAyoDCgLoYsaHR0cDovL2NybC5zY2ExYi5h\nbWF6b250cnVzdC5jb20vc2NhMWItMS5jcmwwEwYDVR0gBAwwCjAIBgZngQwBAgEw\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5zY2ExYi5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQuc2NhMWIuYW1h\nem9udHJ1c3QuY29tL3NjYTFiLmNydDAMBgNVHRMBAf8EAjAAMIIBewYKKwYBBAHW\neQIEAgSCAWsEggFnAWUAdQCt9776fP8QyIudPZwePhhqtGcpXc+xDCTKhYY069yC\nigAAAYJTJ6YhAAAEAwBGMEQCIDEQ4+vPdfdtY8vHuF4HUX9JHEkwWlUyaSApLhQ2\nx8F7AiBKpVbiVvE2uJ0LonwAC7o3juI9G4CLUbJqVLfaaOXWqgB1ALNzdwfhhFD4\nY4bWBancEQlKeS2xZwwLh9zwAw55NqWaAAABglMno10AAAQDAEYwRAIgRpbFfHPY\nyfupLzvq8kZl65VX4FQynmcaAByO50ElkZcCIFZ9YxWGRKj0gYIJFaBc3Tdv//rb\nrGO3V49BPrsR9OnxAHUAtz77JN+cTbp18jnFulj0bF38Qs96nzXEnh0JgSXttJkA\nAAGCUyejHQAABAMARjBEAiBmSh75xZ4bGVrkGj+98lvh9sGBaWDGbVQEdguIlajy\n/QIgBNykupula+RD+FTH1akrAN+k+eani/U4sbJrQ0P8uDEwDQYJKoZIhvcNAQEL\nBQADggEBAD7XQPprJEmgWXYLzTxHLC+RJGKRqswi087IVL+IOL15oha7/Fq8cPNZ\nBUxuxGpYWJ+c8eyrJNG3CVSzGY/AkDQTxGFd/ncSFH9t/T6eduItzqE2eKXPbPUJ\npLag03CUxk5ce0FnMSbeDMXlIJPzlZtyHOts3Q3Wr/rqSGrft/fhAeeiZHW6JuND\nQMsWjDEf2ySoKya5JcAko08AF16uygKiMZb6CGeNkDoRjlHDlW/8jJFWoYiy8mYD\nAGZ8ZE29ogo2hS5B23lnjJa4+XBWemsGoqKNe7oCar17jJN3AmBcxafOBpcbnGfs\n8Eurp/o6izR4gGYRIMgsbrQKFNbaUQ8=\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 65537,
                "public_key_modulus": 25681515563745950440049727315214416115827748861364325550462359413876042106729067926222172829449601367891958372968509526919636449132177236331886786178161435576483145214354456155809739164281230821685501742992566223589305958640862784760585480366228636631469718027916341365082578045980029283806295297710405695947178194784690415772845456764326585232743008050433278682276910951917125613966474701865755225911441911627542488840667206520722427506520628586670347476174881311186329018032334545840980907176569834151090293095292699851119299823589942558687152246162583195961986054906502700876858774662904712490667572409267262035743,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [
                    "http://crl.sca1b.amazontrust.com/sca1b-1.crl"
                ],
                "revocation_ocsp_hash_algorithm": "sha1",
                "revocation_ocsp_must_staple": false,
                "revocation_ocsp_reason": "",
                "revocation_ocsp_response": "Successful",
                "revocation_ocsp_result": true,
                "revocation_ocsp_signature_hash_algorithm": "sha256",
                "revocation_ocsp_stapling": false,
                "revocation_ocsp_status": "Good",
                "revocation_ocsp_time": "",
                "revocation_ocsp_urls": [
                    "http://ocsp.sca1b.amazontrust.com"
                ],
                "san": [
                    "*.trivialsec.com",
                    "trivialsec.com"
                ],
                "serial_number": "30:37:64:62:32:66:37:32:31:38:62:34:35:65:39:35:31:30:35:36:65:32:32:35:63:66:66:66:62:62:37:37",
                "serial_number_decimal": 10442671295421130151053787937732803447,
                "serial_number_hex": "0x7db2f7218b45e951056e225cfffbb77",
                "sha1_fingerprint": "df2894c9454f12da8d20af63c5bd020ae7bbc739",
                "sha256_fingerprint": "bd72ad312a3db4d7e49367cf261e70024aa594c69a2be3dc74daa108c65b55be",
                "signature_algorithm": "sha256WithRSAEncryption",
                "spki_fingerprint": "fc228b022c5d51e1316c8af00df9eda64fce86141e9f951a286ef08b22e354ab",
                "subject": "CN=trivialsec.com",
                "subject_common_name": "trivialsec.com",
                "subject_key_identifier": "99fcecce2829d308fe0a665491fe41f2a3e7e373",
                "tlsa": false,
                "transparency": "SCT extension Good",
                "validation_level": "Domain Validation (DV)",
                "validation_oid": "2.23.140.1.2.1",
                "version": 2,
                "type": "leaf"
            },
            {
                "authority_key_identifier": null,
                "expired": false,
                "expiry_status": "Expires in 5541 days (15 years)",
                "extensions": [
                    {
                        "critical": true,
                        "name": "basicConstraints",
                        "ca": true,
                        "path_length": null
                    },
                    {
                        "critical": true,
                        "name": "keyUsage",
                        "keyUsage": [
                            "digital_signature",
                            "key_cert_sign",
                            "crl_sign"
                        ],
                        "digital_signature": true,
                        "content_commitment": false,
                        "key_encipherment": false,
                        "data_encipherment": false,
                        "key_agreement": false,
                        "key_cert_sign": true,
                        "crl_sign": true
                    },
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08"
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3A8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                    "urlscan.io": "https://urlscan.io/search/#page.tlsIssuer%3A%22Amazon%20Root%20CA%201%22"
                },
                "is_self_signed": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "issuer_common_name": "Amazon Root CA 1",
                "known_compromised": false,
                "md5_fingerprint": "43c6bfaeecfead2f18c6886830fcc8e6",
                "not_after": "2038-01-17T00:00:00",
                "not_before": "2015-05-26T00:00:00",
                "pem": "-----BEGIN CERTIFICATE-----\nMIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA\nA4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI\nU5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs\nN+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv\no/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU\n5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy\nrqXRfboQnoZsG4q5WTP468SQvvG5\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 65537,
                "public_key_modulus": 22529839904807742196558773392430766620630713202204326167346456925862066285712069978308045976033918808540171076811098215136401323342247576789054764683787147408289170989302937775178809187827657352584557953877946352196797789035355954596527030584944622221752357105572088106020206921431118198373122638305846252087992561841631797199384157902018140720267433956687491591657652730221337591680012205319549572614035105482287002884850178224609018864719685310905426619874727796905080238179726224664042154200651710137931048812546957419686875805576245376866031854569863410951649630469236463991472642618512857920826701027482532358669,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [],
                "san": [],
                "serial_number": "30:36:36:63:39:66:63:66:39:39:62:66:38:63:30:61:33:39:65:32:66:30:37:38:38:61:34:33:65:36:39:36:33:36:35:62:63:61",
                "serial_number_decimal": 143266978916655856878034712317230054538369994,
                "serial_number_hex": "0x66c9fcf99bf8c0a39e2f0788a43e696365bca",
                "sha1_fingerprint": "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
                "sha256_fingerprint": "8ecde6884f3d87b1125ba31ac3fcb13d7016de7f57cc904fe1cb97c6ae98196e",
                "signature_algorithm": "sha256WithRSAEncryption",
                "spki_fingerprint": "fbe3018031f9586bcbf41727e417b7d1c45c2f47f93be372a17b96b50757d5a2",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "subject_common_name": "Amazon Root CA 1",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "trust_stores": [
                    {
                        "short_name": "Java SE",
                        "name": "Java(TM) SE Runtime Environment",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Java SE java 18.0.1 2022-04-19 Trust Store"
                    },
                    {
                        "short_name": "CCADB",
                        "name": "Common Certificate Authority Database (CCADB)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in CCADB 2022.04.29 Trust Store (Mozilla, Microsoft, and Apple)"
                    },
                    {
                        "short_name": "Rust",
                        "name": "Rustls (curated CCADB)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Google",
                        "name": "Google Trust Services",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Google android_latest Trust Store"
                    },
                    {
                        "short_name": "Android 2.2",
                        "name": "Android 2.2 (Froyo) 2010",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 2.2 Trust Store"
                    },
                    {
                        "short_name": "Android 2.3",
                        "name": "Android 2.3 (Gingerbread) 2010",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 2.3 Trust Store"
                    },
                    {
                        "short_name": "Android 3",
                        "name": "Android 3 (Honeycomb) 2011",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 3 Trust Store"
                    },
                    {
                        "short_name": "Android 4",
                        "name": "Android 4 (Ice Cream Sandwich) 2011",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 4 Trust Store"
                    },
                    {
                        "short_name": "Android 4.4",
                        "name": "Android 4.4 (KitKat) 2013",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 4.4 Trust Store"
                    },
                    {
                        "short_name": "Android 7",
                        "name": "Android 7 (Nougat) 2016",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 7 Trust Store"
                    },
                    {
                        "short_name": "Android 8",
                        "name": "Android 8 (Oreo) 2017",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 8 android_8 Trust Store"
                    },
                    {
                        "short_name": "Android 9",
                        "name": "Android 9 (Pie) 2018",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 9 android_9 Trust Store"
                    },
                    {
                        "short_name": "Android 10",
                        "name": "Android 10 (Quince Tart) 2019",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 10 android_10 Trust Store"
                    },
                    {
                        "short_name": "Android 11",
                        "name": "Android 11 (Red Velvet Cake) 2020",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 11 android_11 Trust Store"
                    },
                    {
                        "short_name": "Android 12",
                        "name": "Android 12 (Snow Cone) 2021",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 12 android_12 Trust Store"
                    },
                    {
                        "short_name": "Android 13",
                        "name": "Android 13 (Tiramisu) 2022",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 13 android_13 Trust Store"
                    },
                    {
                        "short_name": "Android 14",
                        "name": "Android 14 (Upside Down Cake) 2023",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 14 android_14 Trust Store"
                    },
                    {
                        "short_name": "certifi",
                        "name": "certifi (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Russian",
                        "name": "MinTsifry Rossii",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Russian Trust Store"
                    },
                    {
                        "short_name": "libcurl",
                        "name": "libcurl",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Dart",
                        "name": "Dart Native",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Dart 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Windows",
                        "name": "Microsoft Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Apple",
                        "name": "Apple devices",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Arch Linux",
                        "name": "Linux (Arch)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Arch Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Fedora",
                        "name": "Linux (Fedora)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Fedora 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Debian",
                        "name": "Linux (Debian)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Debian 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ubuntu",
                        "name": "Linux (Ubuntu)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ubuntu 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Alpine",
                        "name": "Linux (Apline)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Alpine 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Centos",
                        "name": "Linux (Centos)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Centos 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "RHEL",
                        "name": "Linux (RHEL)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in RHEL 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "OpenBSD",
                        "name": "OpenBSD",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in OpenBSD 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "FreeBSD",
                        "name": "FreeBSD",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in FreeBSD 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Android FOSS",
                        "name": "Android (open source)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android FOSS android_latest Trust Store"
                    },
                    {
                        "short_name": "Android latest",
                        "name": "Android (latest Google build)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android latest android_latest Trust Store"
                    },
                    {
                        "short_name": "Roku",
                        "name": "Roku",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Roku 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Windows",
                        "name": "Python built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Linux",
                        "name": "Python built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Apple",
                        "name": "Python built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "urllib",
                        "name": "urllib (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in urllib certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "requests",
                        "name": "requests (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in requests certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Django",
                        "name": "Django (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Django certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Go on Windows",
                        "name": "Go built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Go on Linux",
                        "name": "Go built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Go on Apple",
                        "name": "Go built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "gocertifi",
                        "name": "gocertifi (Go module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in gocertifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Windows",
                        "name": "Erlang built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Linux",
                        "name": "Erlang built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Apple",
                        "name": "Erlang built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "erlang-certifi",
                        "name": "certifi (Erlang library)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in erlang-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Windows",
                        "name": "Ruby built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Linux",
                        "name": "Ruby built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Apple",
                        "name": "Ruby built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "ruby-certifi",
                        "name": "certifi (Ruby gem)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in ruby-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Windows",
                        "name": "Node.js built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Linux",
                        "name": "Node.js built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Apple",
                        "name": "Node.js built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "node-certifi",
                        "name": "certifi (Node.js package)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in node-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Rust on Windows",
                        "name": "Rust using Rustls crate on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rust on Linux",
                        "name": "Rust using Rustls crate on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rust on Apple",
                        "name": "Rust using Rustls crate on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rustls crate",
                        "name": "Rustls (Rust crate) using webpki-roots",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rustls crate 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Web PKI crate",
                        "name": "webpki (Rust crate)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Web PKI crate 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Windows",
                        "name": "libcurl on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Linux",
                        "name": "libcurl on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Apple",
                        "name": "libcurl on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Windows",
                        "name": "Elixir on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Linux",
                        "name": "Elixir on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Apple",
                        "name": "Elixir on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "elixir-mint",
                        "name": "Mint (elixir package)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in elixir-mint 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Windows",
                        "name": "Phoenix (elixir package) on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Linux",
                        "name": "Phoenix (elixir package) on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Apple",
                        "name": "Phoenix (elixir package) on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Firefox",
                        "name": "Mozilla Firefox",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Firefox 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Tor",
                        "name": "Tor Web Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Tor 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Chromium",
                        "name": "Chromium Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Chromium 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Chrome",
                        "name": "Google Chrome",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Chrome 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Edge",
                        "name": "Microsoft Edge",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Edge 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Brave",
                        "name": "Brave Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Brave 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Opera",
                        "name": "Opera Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Opera 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Vivaldi",
                        "name": "Vivaldi Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Vivaldi 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Silk",
                        "name": "Amazon Silk",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Silk 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Samsung",
                        "name": "Samsung Internet",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Samsung 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Yandex",
                        "name": "Yandex",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Yandex Trust Store"
                    },
                    {
                        "short_name": "Safari",
                        "name": "Apple Safari",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Safari 2022.04.29 Trust Store"
                    }
                ],
                "validation_level": null,
                "validation_oid": null,
                "version": 2,
                "type": "root"
            },
            {
                "authority_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "expired": false,
                "expiry_status": "Expires in 1068 days (3 years)",
                "extensions": [
                    {
                        "critical": true,
                        "name": "basicConstraints",
                        "ca": true,
                        "path_length": 0
                    },
                    {
                        "critical": true,
                        "name": "keyUsage",
                        "keyUsage": [
                            "digital_signature",
                            "key_cert_sign",
                            "crl_sign"
                        ],
                        "digital_signature": true,
                        "content_commitment": false,
                        "key_encipherment": false,
                        "data_encipherment": false,
                        "key_agreement": false,
                        "key_cert_sign": true,
                        "crl_sign": true
                    },
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "59a4660652a07b95923ca394072796745bf93dd0"
                    },
                    {
                        "critical": false,
                        "name": "authorityKeyIdentifier",
                        "authorityKeyIdentifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                        "authority_cert_issuer": "",
                        "authority_cert_serial_number": null
                    },
                    {
                        "critical": false,
                        "name": "authorityInfoAccess",
                        "authorityInfoAccess": [
                            {
                                "access_location": "http://ocsp.rootca1.amazontrust.com",
                                "access_method": "OCSP"
                            },
                            {
                                "access_location": "http://crt.rootca1.amazontrust.com/rootca1.cer",
                                "access_method": "caIssuers"
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "cRLDistributionPoints",
                        "cRLDistributionPoints": [
                            {
                                "full_name": "http://crl.rootca1.amazontrust.com/rootca1.crl",
                                "relative_name": null,
                                "reasons": null,
                                "crl_issuer": ""
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "certificatePolicies"
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=917e732d330f9a12404f73d8bea36948b929dffc",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3A917e732d330f9a12404f73d8bea36948b929dffc",
                    "urlscan.io": "https://urlscan.io/search/#page.tlsIssuer%3A%22Amazon%20Root%20CA%201%22"
                },
                "is_self_signed": false,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "issuer_common_name": "Amazon Root CA 1",
                "known_compromised": false,
                "md5_fingerprint": "eb268e55d434febda36a979a44654b6d",
                "not_after": "2025-10-19T00:00:00",
                "not_before": "2015-10-22T00:00:00",
                "pem": "-----BEGIN CERTIFICATE-----\nMIIESTCCAzGgAwIBAgITBn+UV4WH6Kx33rJTMlu8mYtWDTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTE1MTAyMjAwMDAwMFoXDTI1MTAxOTAwMDAwMFowRjEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEVMBMGA1UECxMMU2VydmVyIENB\nIDFCMQ8wDQYDVQQDEwZBbWF6b24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDCThZn3c68asg3Wuw6MLAd5tES6BIoSMzoKcG5blPVo+sDORrMd4f2AbnZ\ncMzPa43j4wNxhplty6aUKk4T1qe9BOwKFjwK6zmxxLVYo7bHViXsPlJ6qOMpFge5\nblDP+18x+B26A0piiQOuPkfyDyeR4xQghfj66Yo19V+emU3nazfvpFA+ROz6WoVm\nB5x+F2pV8xeKNR7u6azDdU5YVX1TawprmxRC1+WsAYmz6qP+z8ArDITC2FMVy2fw\n0IjKOtEXc/VfmtTFch5+AfGYMGMqqvJ6LcXiAhqG5TI+Dr0RtM88k+8XUBCeQ8IG\nKuANaL7TiItKZYxK1MMuTJtV9IblAgMBAAGjggE7MIIBNzASBgNVHRMBAf8ECDAG\nAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUWaRmBlKge5WSPKOUByeW\ndFv5PdAwHwYDVR0jBBgwFoAUhBjMhTTsvAyUlC4IWZzHshBOCggwewYIKwYBBQUH\nAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8vb2NzcC5yb290Y2ExLmFtYXpvbnRy\ndXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDovL2NydC5yb290Y2ExLmFtYXpvbnRy\ndXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3Js\nLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jvb3RjYTEuY3JsMBMGA1UdIAQMMAow\nCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IBAQCFkr41u3nPo4FCHOTjY3NTOVI1\n59Gt/a6ZiqyJEi+752+a1U5y6iAwYfmXss2lJwJFqMp2PphKg5625kXg8kP2CN5t\n6G7bMQcT8C8xDZNtYTd7WPD8UZiRKAJPBXa30/AbwuZe0GaFEQ8ugcYQgSn+IGBI\n8/LwhBNTZTUVEWuCUUBVV18YtbAiPq3yXqMB48Oz+ctBWuZSkbvkNodPLamkB2g1\nupRyzQ7qDn1X8nn8N8V7YJ6y68AtkHcNSRAnpTitxBKjtKPISLMVCx7i4hncxHZS\nyLyKQXhw2W2Xs0qLeC1etA+jTGDK4UfLeC0SF7FSi8o5LL21L8IzApar2pR/\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 65537,
                "public_key_modulus": 24528737555851895213919827617064808536856788789868126310716752303420041319710819680867697306230985630039655096548324364189962675576756038921107965025585889330528490649228935527969954506874750514159926943451238689552458142167021149788529783891257271028002485075630471793111207960868638365698705018555597520367289025831586046483446904825820575805338475813865444295353094097022678376192149453480223428943386514159000527368947588174705227657134217583008630047462959260157651883088072156905420231950318110240318878613016990846576820326568049365612395397183597930457965295993595011597251067348997341253617591444999389873893,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [
                    "http://crl.rootca1.amazontrust.com/rootca1.crl"
                ],
                "san": [],
                "serial_number": "30:36:37:66:39:34:35:37:38:35:38:37:65:38:61:63:37:37:64:65:62:32:35:33:33:32:35:62:62:63:39:39:38:62:35:36:30:64",
                "serial_number_decimal": 144918209630989264145272943054026349679957517,
                "serial_number_hex": "0x67f94578587e8ac77deb253325bbc998b560d",
                "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                "sha256_fingerprint": "f55f9ffcb83c73453261601c7e044db15a0f034b93c05830f28635ef889cf670",
                "signature_algorithm": "sha256WithRSAEncryption",
                "spki_fingerprint": "252333a8e3abb72393d6499abbacca8604faefa84681ccc3e5531d44cc896450",
                "subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                "subject_common_name": "Amazon",
                "subject_key_identifier": "59a4660652a07b95923ca394072796745bf93dd0",
                "validation_level": "Domain Validation (DV)",
                "validation_oid": "2.23.140.1.2.1",
                "version": 2,
                "type": "intermediate"
            },
            {
                "authority_key_identifier": null,
                "expired": false,
                "expiry_status": "Expires in 5525 days (15 years)",
                "extensions": [
                    {
                        "critical": true,
                        "name": "basicConstraints",
                        "ca": true,
                        "path_length": null
                    },
                    {
                        "critical": true,
                        "name": "keyUsage",
                        "keyUsage": [
                            "key_cert_sign",
                            "crl_sign"
                        ],
                        "digital_signature": false,
                        "content_commitment": false,
                        "key_encipherment": false,
                        "data_encipherment": false,
                        "key_agreement": false,
                        "key_cert_sign": true,
                        "crl_sign": true
                    },
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183"
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3A925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                    "urlscan.io": "https://urlscan.io/search/#page.tlsIssuer%3A%22Starfield%20Services%20Root%20Certificate%20Authority%20-%20G2%22"
                },
                "is_self_signed": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "issuer_common_name": "Starfield Services Root Certificate Authority - G2",
                "known_compromised": false,
                "md5_fingerprint": "173574af7b611cebf4f93ce2ee40f9a2",
                "not_after": "2037-12-31T23:59:59",
                "not_before": "2009-09-01T00:00:00",
                "pem": "-----BEGIN CERTIFICATE-----\nMIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMx\nEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoT\nHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVs\nZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5\nMDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgZgxCzAJBgNVBAYTAlVTMRAwDgYD\nVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFy\nZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFyZmllbGQgU2Vy\ndmljZXMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20p\nOsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2h/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm2\n8xpWriu2dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4PahHQUw2eeBGg6345AWh1K\nTs9DkTvnVtYAcMtS7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLPLJGmpufe\nhRhJfGZOozptqbXuNC66DQO4M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk\n6mFBrMnUVN+HL8cisibMn1lUaJ/8viovxFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAw\nDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJxfAN+q\nAdcwKziIorhtSpzyEZGDMA0GCSqGSIb3DQEBCwUAA4IBAQBLNqaEd2ndOxmfZyMI\nbw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPPE95Dz+I0swSdHynVv/heyNXB\nve6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTyxQGjhdByPq1z\nqwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkd\niEDPfUYd/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn\n0q23KXB56jzaYyWf/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCN\nsSi6\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 65537,
                "public_key_modulus": 26894789576491863019171445242018370132029525033879210664513024255165308689836081694724912552986436241602345929261854187816625921774943728567119070351838976265193901442169339571326613928339955106648223197498035701437846440970934704192382084561469274550003268570741310868032789070264835003681318445644941362885752628282968349509706358865971392279088395067847314610178969555804359319567178098112935181143559364150874524817692694181296058297355335204675211145990489303168553611700020424738364579606192390834705213026692659672388567853246354560726855054573503174641583891075106464210711468427779853334564691648681991700229,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [],
                "san": [],
                "serial_number": "30:30",
                "serial_number_decimal": 0,
                "serial_number_hex": "0x00",
                "sha1_fingerprint": "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
                "sha256_fingerprint": "568d6905a2c88708a4b3025190edcfedb1974a606a13c6e5290fcb2ae63edab5",
                "signature_algorithm": "sha256WithRSAEncryption",
                "spki_fingerprint": "2b071c59a0a0ae76b0eadb2bad23bad4580b69c3601b630c2eaf0613afa83f92",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "subject_common_name": "Starfield Services Root Certificate Authority - G2",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "trust_stores": [
                    {
                        "short_name": "Java SE",
                        "name": "Java(TM) SE Runtime Environment",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Java SE java 18.0.1 2022-04-19 Trust Store"
                    },
                    {
                        "short_name": "CCADB",
                        "name": "Common Certificate Authority Database (CCADB)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in CCADB 2022.04.29 Trust Store (Mozilla, Microsoft, and Apple)"
                    },
                    {
                        "short_name": "Rust",
                        "name": "Rustls (curated CCADB)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Google",
                        "name": "Google Trust Services",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Google android_latest Trust Store"
                    },
                    {
                        "short_name": "Android 2.2",
                        "name": "Android 2.2 (Froyo) 2010",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Android 2.2 Trust Store"
                    },
                    {
                        "short_name": "Android 2.3",
                        "name": "Android 2.3 (Gingerbread) 2010",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 2.3 android_2_3 Trust Store"
                    },
                    {
                        "short_name": "Android 3",
                        "name": "Android 3 (Honeycomb) 2011",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 3 android_3 Trust Store"
                    },
                    {
                        "short_name": "Android 4",
                        "name": "Android 4 (Ice Cream Sandwich) 2011",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 4 android_4 Trust Store"
                    },
                    {
                        "short_name": "Android 4.4",
                        "name": "Android 4.4 (KitKat) 2013",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 4.4 android_4_4 Trust Store"
                    },
                    {
                        "short_name": "Android 7",
                        "name": "Android 7 (Nougat) 2016",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 7 android_7 Trust Store"
                    },
                    {
                        "short_name": "Android 8",
                        "name": "Android 8 (Oreo) 2017",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 8 android_8 Trust Store"
                    },
                    {
                        "short_name": "Android 9",
                        "name": "Android 9 (Pie) 2018",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 9 android_9 Trust Store"
                    },
                    {
                        "short_name": "Android 10",
                        "name": "Android 10 (Quince Tart) 2019",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 10 android_10 Trust Store"
                    },
                    {
                        "short_name": "Android 11",
                        "name": "Android 11 (Red Velvet Cake) 2020",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 11 android_11 Trust Store"
                    },
                    {
                        "short_name": "Android 12",
                        "name": "Android 12 (Snow Cone) 2021",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 12 android_12 Trust Store"
                    },
                    {
                        "short_name": "Android 13",
                        "name": "Android 13 (Tiramisu) 2022",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 13 android_13 Trust Store"
                    },
                    {
                        "short_name": "Android 14",
                        "name": "Android 14 (Upside Down Cake) 2023",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 14 android_14 Trust Store"
                    },
                    {
                        "short_name": "certifi",
                        "name": "certifi (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Russian",
                        "name": "MinTsifry Rossii",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Russian Trust Store"
                    },
                    {
                        "short_name": "libcurl",
                        "name": "libcurl",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the libcurl Trust Store"
                    },
                    {
                        "short_name": "Dart",
                        "name": "Dart Native",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Dart 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Windows",
                        "name": "Microsoft Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Apple",
                        "name": "Apple devices",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Arch Linux",
                        "name": "Linux (Arch)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Arch Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Fedora",
                        "name": "Linux (Fedora)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Fedora 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Debian",
                        "name": "Linux (Debian)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Debian 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ubuntu",
                        "name": "Linux (Ubuntu)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ubuntu 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Alpine",
                        "name": "Linux (Apline)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Alpine 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Centos",
                        "name": "Linux (Centos)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Centos 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "RHEL",
                        "name": "Linux (RHEL)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in RHEL 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "OpenBSD",
                        "name": "OpenBSD",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in OpenBSD 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "FreeBSD",
                        "name": "FreeBSD",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in FreeBSD 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Android FOSS",
                        "name": "Android (open source)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android FOSS android_latest Trust Store"
                    },
                    {
                        "short_name": "Android latest",
                        "name": "Android (latest Google build)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android latest android_latest Trust Store"
                    },
                    {
                        "short_name": "Roku",
                        "name": "Roku",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Roku 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Windows",
                        "name": "Python built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Linux",
                        "name": "Python built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Apple",
                        "name": "Python built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "urllib",
                        "name": "urllib (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in urllib certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "requests",
                        "name": "requests (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in requests certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Django",
                        "name": "Django (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Django certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Go on Windows",
                        "name": "Go built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Go on Linux",
                        "name": "Go built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Go on Apple",
                        "name": "Go built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "gocertifi",
                        "name": "gocertifi (Go module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in gocertifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Windows",
                        "name": "Erlang built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Linux",
                        "name": "Erlang built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Apple",
                        "name": "Erlang built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "erlang-certifi",
                        "name": "certifi (Erlang library)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in erlang-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Windows",
                        "name": "Ruby built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Linux",
                        "name": "Ruby built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Apple",
                        "name": "Ruby built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "ruby-certifi",
                        "name": "certifi (Ruby gem)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in ruby-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Windows",
                        "name": "Node.js built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Linux",
                        "name": "Node.js built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Apple",
                        "name": "Node.js built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "node-certifi",
                        "name": "certifi (Node.js package)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in node-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Rust on Windows",
                        "name": "Rust using Rustls crate on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rust on Linux",
                        "name": "Rust using Rustls crate on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rust on Apple",
                        "name": "Rust using Rustls crate on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rustls crate",
                        "name": "Rustls (Rust crate) using webpki-roots",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rustls crate 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Web PKI crate",
                        "name": "webpki (Rust crate)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Web PKI crate 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Windows",
                        "name": "libcurl on Windows",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the libcurl on Windows Trust Store"
                    },
                    {
                        "short_name": "libcurl on Linux",
                        "name": "libcurl on Linux",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the libcurl on Linux Trust Store"
                    },
                    {
                        "short_name": "libcurl on Apple",
                        "name": "libcurl on Apple",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the libcurl on Apple Trust Store"
                    },
                    {
                        "short_name": "Elixir on Windows",
                        "name": "Elixir on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Linux",
                        "name": "Elixir on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Apple",
                        "name": "Elixir on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "elixir-mint",
                        "name": "Mint (elixir package)",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the elixir-mint Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Windows",
                        "name": "Phoenix (elixir package) on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Linux",
                        "name": "Phoenix (elixir package) on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Apple",
                        "name": "Phoenix (elixir package) on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Firefox",
                        "name": "Mozilla Firefox",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Firefox 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Tor",
                        "name": "Tor Web Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Tor 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Chromium",
                        "name": "Chromium Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Chromium 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Chrome",
                        "name": "Google Chrome",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Chrome 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Edge",
                        "name": "Microsoft Edge",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Edge 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Brave",
                        "name": "Brave Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Brave 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Opera",
                        "name": "Opera Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Opera 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Vivaldi",
                        "name": "Vivaldi Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Vivaldi 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Silk",
                        "name": "Amazon Silk",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Silk 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Samsung",
                        "name": "Samsung Internet",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Samsung 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Yandex",
                        "name": "Yandex",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Yandex Trust Store"
                    },
                    {
                        "short_name": "Safari",
                        "name": "Apple Safari",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Safari 2022.04.29 Trust Store"
                    }
                ],
                "validation_level": null,
                "validation_oid": null,
                "version": 2,
                "type": "root"
            },
            {
                "authority_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "expired": false,
                "expiry_status": "Expires in 5524 days (15 years)",
                "extensions": [
                    {
                        "critical": true,
                        "name": "basicConstraints",
                        "ca": true,
                        "path_length": null
                    },
                    {
                        "critical": true,
                        "name": "keyUsage",
                        "keyUsage": [
                            "digital_signature",
                            "key_cert_sign",
                            "crl_sign"
                        ],
                        "digital_signature": true,
                        "content_commitment": false,
                        "key_encipherment": false,
                        "data_encipherment": false,
                        "key_agreement": false,
                        "key_cert_sign": true,
                        "crl_sign": true
                    },
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08"
                    },
                    {
                        "critical": false,
                        "name": "authorityKeyIdentifier",
                        "authorityKeyIdentifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                        "authority_cert_issuer": "",
                        "authority_cert_serial_number": null
                    },
                    {
                        "critical": false,
                        "name": "authorityInfoAccess",
                        "authorityInfoAccess": [
                            {
                                "access_location": "http://ocsp.rootg2.amazontrust.com",
                                "access_method": "OCSP"
                            },
                            {
                                "access_location": "http://crt.rootg2.amazontrust.com/rootg2.cer",
                                "access_method": "caIssuers"
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "cRLDistributionPoints",
                        "cRLDistributionPoints": [
                            {
                                "full_name": "http://crl.rootg2.amazontrust.com/rootg2.crl",
                                "relative_name": null,
                                "reasons": null,
                                "crl_issuer": ""
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "certificatePolicies"
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=06b25927c42a721631c1efd9431e648fa62e1e39",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3A06b25927c42a721631c1efd9431e648fa62e1e39",
                    "urlscan.io": "https://urlscan.io/search/#page.tlsIssuer%3A%22Starfield%20Services%20Root%20Certificate%20Authority%20-%20G2%22"
                },
                "is_self_signed": false,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "issuer_common_name": "Starfield Services Root Certificate Authority - G2",
                "known_compromised": false,
                "md5_fingerprint": "e865a22aae524d26869af0448d6fd896",
                "not_after": "2037-12-31T01:00:00",
                "not_before": "2015-05-25T12:00:00",
                "pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 65537,
                "public_key_modulus": 22529839904807742196558773392430766620630713202204326167346456925862066285712069978308045976033918808540171076811098215136401323342247576789054764683787147408289170989302937775178809187827657352584557953877946352196797789035355954596527030584944622221752357105572088106020206921431118198373122638305846252087992561841631797199384157902018140720267433956687491591657652730221337591680012205319549572614035105482287002884850178224609018864719685310905426619874727796905080238179726224664042154200651710137931048812546957419686875805576245376866031854569863410951649630469236463991472642618512857920826701027482532358669,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [
                    "http://crl.rootg2.amazontrust.com/rootg2.crl"
                ],
                "san": [],
                "serial_number": "30:36:37:66:39:34:34:61:32:61:32:37:63:64:66:33:66:61:63:32:61:65:32:62:30:31:66:39:30:38:65:65:62:39:63:34:63:36",
                "serial_number_decimal": 144918191876577076464031512351042010504348870,
                "serial_number_hex": "0x67f944a2a27cdf3fac2ae2b01f908eeb9c4c6",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "sha256_fingerprint": "87dcd4dc74640a322cd205552506d1be64f12596258096544986b4850bc72706",
                "signature_algorithm": "sha256WithRSAEncryption",
                "spki_fingerprint": "fbe3018031f9586bcbf41727e417b7d1c45c2f47f93be372a17b96b50757d5a2",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "subject_common_name": "Amazon Root CA 1",
                "subject_key_identifier": "8418cc8534ecbc0c94942e08599cc7b2104e0a08",
                "validation_level": null,
                "validation_oid": null,
                "version": 2,
                "type": "intermediate"
            },
            {
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "expired": false,
                "expiry_status": "Expires in 4244 days (12 years)",
                "extensions": [
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7"
                    },
                    {
                        "critical": false,
                        "name": "authorityKeyIdentifier",
                        "authorityKeyIdentifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                        "authority_cert_issuer": "<Name(C=US,O=Starfield Technologies\\, Inc.,OU=Starfield Class 2 Certification Authority)>",
                        "authority_cert_serial_number": 0
                    },
                    {
                        "critical": false,
                        "name": "basicConstraints",
                        "ca": true,
                        "path_length": null
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3Aad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                    "urlscan.io": null
                },
                "is_self_signed": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "issuer_common_name": null,
                "known_compromised": false,
                "md5_fingerprint": "324a4bbbc863699bbe749ac6dd1d4624",
                "not_after": "2034-06-29T17:39:16",
                "not_before": "2004-06-29T17:39:16",
                "pem": "-----BEGIN CERTIFICATE-----\nMIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzEl\nMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMp\nU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQw\nNjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBoMQswCQYDVQQGEwJVUzElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZp\nZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqGSIb3\nDQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf\n8MOh2tTYbitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN\n+lq2cwQlZut3f+dZxkqZJRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0\nX9tDkYI22WY8sbi5gv2cOj4QyDvvBmVmepsZGD3/cVE8MC5fvj13c7JdBmzDI1aa\nK4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSNF4Azbl5KXZnJHoe0nRrA\n1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HFMIHCMB0G\nA1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fR\nzt0fhvRbVazc1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0\nYXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBD\nbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGsafPzWdqbAYcaT1epoXkJKtv3\nL7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLMPUxA2IGvd56D\neruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJl\nxy16paq8U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynp\nVSJYACPq4xJDKVtHCN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEY\nWQPJIrSPnNVeKtelttQKbfi3QBFGmh95DmK/D5fs4C8fF5Q=\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 3,
                "public_key_modulus": 23126652894517134867316746208580002393951620994105897965217477641996369156607851940110963195714738116378602838244080151626132965164999754684325251585879909514900663307760437542634239757809878030989295575374739246357717679659998333674816116138322138786572832985580853512393368040790169913916290598871208501347278366397141061485776527418936848208709428445770143266721240677372761538290582673884139366523397880588779277517866155994226228737729220086297966554043113318828529579674536383035543766056506047302587855482148044607636764718067592524158564621629925399136629004577915876162329639943969169027243125049358836302251,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [],
                "san": [],
                "serial_number": "30:30",
                "serial_number_decimal": 0,
                "serial_number_hex": "0x00",
                "sha1_fingerprint": "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
                "sha256_fingerprint": "1465fa205397b876faa6f0a9958e5590e40fcc7faa4fb7c2c8677521fb5fb658",
                "signature_algorithm": "sha1WithRSAEncryption",
                "spki_fingerprint": "15f14ac45c9c7da233d3479164e8137fe35ee0f38ae858183f08410ea82ac4b4",
                "subject": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "subject_common_name": null,
                "subject_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "trust_stores": [
                    {
                        "short_name": "Java SE",
                        "name": "Java(TM) SE Runtime Environment",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Java SE java 18.0.1 2022-04-19 Trust Store"
                    },
                    {
                        "short_name": "CCADB",
                        "name": "Common Certificate Authority Database (CCADB)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in CCADB 2022.04.29 Trust Store (Mozilla, Microsoft, and Apple)"
                    },
                    {
                        "short_name": "Rust",
                        "name": "Rustls (curated CCADB)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Google",
                        "name": "Google Trust Services",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Google android_latest Trust Store"
                    },
                    {
                        "short_name": "Android 2.2",
                        "name": "Android 2.2 (Froyo) 2010",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 2.2 android_2_2 Trust Store"
                    },
                    {
                        "short_name": "Android 2.3",
                        "name": "Android 2.3 (Gingerbread) 2010",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 2.3 android_2_3 Trust Store"
                    },
                    {
                        "short_name": "Android 3",
                        "name": "Android 3 (Honeycomb) 2011",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 3 android_3 Trust Store"
                    },
                    {
                        "short_name": "Android 4",
                        "name": "Android 4 (Ice Cream Sandwich) 2011",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 4 android_4 Trust Store"
                    },
                    {
                        "short_name": "Android 4.4",
                        "name": "Android 4.4 (KitKat) 2013",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 4.4 android_4_4 Trust Store"
                    },
                    {
                        "short_name": "Android 7",
                        "name": "Android 7 (Nougat) 2016",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 7 android_7 Trust Store"
                    },
                    {
                        "short_name": "Android 8",
                        "name": "Android 8 (Oreo) 2017",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 8 android_8 Trust Store"
                    },
                    {
                        "short_name": "Android 9",
                        "name": "Android 9 (Pie) 2018",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 9 android_9 Trust Store"
                    },
                    {
                        "short_name": "Android 10",
                        "name": "Android 10 (Quince Tart) 2019",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 10 android_10 Trust Store"
                    },
                    {
                        "short_name": "Android 11",
                        "name": "Android 11 (Red Velvet Cake) 2020",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 11 android_11 Trust Store"
                    },
                    {
                        "short_name": "Android 12",
                        "name": "Android 12 (Snow Cone) 2021",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 12 android_12 Trust Store"
                    },
                    {
                        "short_name": "Android 13",
                        "name": "Android 13 (Tiramisu) 2022",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 13 android_13 Trust Store"
                    },
                    {
                        "short_name": "Android 14",
                        "name": "Android 14 (Upside Down Cake) 2023",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android 14 android_14 Trust Store"
                    },
                    {
                        "short_name": "certifi",
                        "name": "certifi (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Russian",
                        "name": "MinTsifry Rossii",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Russian Trust Store"
                    },
                    {
                        "short_name": "libcurl",
                        "name": "libcurl",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Dart",
                        "name": "Dart Native",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Dart 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Windows",
                        "name": "Microsoft Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Apple",
                        "name": "Apple devices",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Arch Linux",
                        "name": "Linux (Arch)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Arch Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Fedora",
                        "name": "Linux (Fedora)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Fedora 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Debian",
                        "name": "Linux (Debian)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Debian 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ubuntu",
                        "name": "Linux (Ubuntu)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ubuntu 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Alpine",
                        "name": "Linux (Apline)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Alpine 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Centos",
                        "name": "Linux (Centos)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Centos 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "RHEL",
                        "name": "Linux (RHEL)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in RHEL 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "OpenBSD",
                        "name": "OpenBSD",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in OpenBSD 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "FreeBSD",
                        "name": "FreeBSD",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in FreeBSD 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Android FOSS",
                        "name": "Android (open source)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android FOSS android_latest Trust Store"
                    },
                    {
                        "short_name": "Android latest",
                        "name": "Android (latest Google build)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Android latest android_latest Trust Store"
                    },
                    {
                        "short_name": "Roku",
                        "name": "Roku",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Roku 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Windows",
                        "name": "Python built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Linux",
                        "name": "Python built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Python on Apple",
                        "name": "Python built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Python on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "urllib",
                        "name": "urllib (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in urllib certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "requests",
                        "name": "requests (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in requests certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Django",
                        "name": "Django (Python module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Django certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Go on Windows",
                        "name": "Go built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Go on Linux",
                        "name": "Go built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Go on Apple",
                        "name": "Go built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Go on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "gocertifi",
                        "name": "gocertifi (Go module)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in gocertifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Windows",
                        "name": "Erlang built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Linux",
                        "name": "Erlang built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Erlang on Apple",
                        "name": "Erlang built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Erlang on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "erlang-certifi",
                        "name": "certifi (Erlang library)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in erlang-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Windows",
                        "name": "Ruby built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Linux",
                        "name": "Ruby built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Ruby on Apple",
                        "name": "Ruby built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Ruby on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "ruby-certifi",
                        "name": "certifi (Ruby gem)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in ruby-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Windows",
                        "name": "Node.js built-in https module on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Linux",
                        "name": "Node.js built-in https module on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Node.js on Apple",
                        "name": "Node.js built-in https module on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Node.js on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "node-certifi",
                        "name": "certifi (Node.js package)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in node-certifi certifi==2021.10.08 Trust Store"
                    },
                    {
                        "short_name": "Rust on Windows",
                        "name": "Rust using Rustls crate on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Windows 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rust on Linux",
                        "name": "Rust using Rustls crate on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Linux 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rust on Apple",
                        "name": "Rust using Rustls crate on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rust on Apple 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Rustls crate",
                        "name": "Rustls (Rust crate) using webpki-roots",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Rustls crate 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Web PKI crate",
                        "name": "webpki (Rust crate)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Web PKI crate 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Windows",
                        "name": "libcurl on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Linux",
                        "name": "libcurl on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "libcurl on Apple",
                        "name": "libcurl on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in libcurl on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Windows",
                        "name": "Elixir on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Linux",
                        "name": "Elixir on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir on Apple",
                        "name": "Elixir on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "elixir-mint",
                        "name": "Mint (elixir package)",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in elixir-mint 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Windows",
                        "name": "Phoenix (elixir package) on Windows",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Windows 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Linux",
                        "name": "Phoenix (elixir package) on Linux",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Linux 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Elixir Phoenix on Apple",
                        "name": "Phoenix (elixir package) on Apple",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Elixir Phoenix on Apple 2022.05.03 Trust Store"
                    },
                    {
                        "short_name": "Firefox",
                        "name": "Mozilla Firefox",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Firefox 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Tor",
                        "name": "Tor Web Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Tor 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Chromium",
                        "name": "Chromium Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Chromium 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Chrome",
                        "name": "Google Chrome",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Chrome 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Edge",
                        "name": "Microsoft Edge",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Edge 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Brave",
                        "name": "Brave Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Brave 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Opera",
                        "name": "Opera Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Opera 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Vivaldi",
                        "name": "Vivaldi Browser",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Vivaldi 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Silk",
                        "name": "Amazon Silk",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Silk 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Samsung",
                        "name": "Samsung Internet",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Samsung 2022.04.29 Trust Store"
                    },
                    {
                        "short_name": "Yandex",
                        "name": "Yandex",
                        "is_trusted": false,
                        "exists": false,
                        "description": "No Root CA Certificate in the Yandex Trust Store"
                    },
                    {
                        "short_name": "Safari",
                        "name": "Apple Safari",
                        "is_trusted": true,
                        "exists": true,
                        "expired": false,
                        "description": "Root CA Certificate present in Safari 2022.04.29 Trust Store"
                    }
                ],
                "validation_level": null,
                "validation_oid": null,
                "version": 2,
                "type": "root"
            },
            {
                "authority_key_identifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                "expired": false,
                "expiry_status": "Expires in 4243 days (12 years)",
                "extensions": [
                    {
                        "critical": true,
                        "name": "basicConstraints",
                        "ca": true,
                        "path_length": null
                    },
                    {
                        "critical": true,
                        "name": "keyUsage",
                        "keyUsage": [
                            "digital_signature",
                            "key_cert_sign",
                            "crl_sign"
                        ],
                        "digital_signature": true,
                        "content_commitment": false,
                        "key_encipherment": false,
                        "data_encipherment": false,
                        "key_agreement": false,
                        "key_cert_sign": true,
                        "crl_sign": true
                    },
                    {
                        "critical": false,
                        "name": "subjectKeyIdentifier",
                        "subjectKeyIdentifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183"
                    },
                    {
                        "critical": false,
                        "name": "authorityKeyIdentifier",
                        "authorityKeyIdentifier": "bf5fb7d1cedd1f86f45b55acdcd710c20ea988e7",
                        "authority_cert_issuer": "",
                        "authority_cert_serial_number": null
                    },
                    {
                        "critical": false,
                        "name": "authorityInfoAccess",
                        "authorityInfoAccess": [
                            {
                                "access_location": "http://o.ss2.us/",
                                "access_method": "OCSP"
                            },
                            {
                                "access_location": "http://x.ss2.us/x.cer",
                                "access_method": "caIssuers"
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "cRLDistributionPoints",
                        "cRLDistributionPoints": [
                            {
                                "full_name": "http://s.ss2.us/r.crl",
                                "relative_name": null,
                                "reasons": null,
                                "crl_issuer": ""
                            }
                        ]
                    },
                    {
                        "critical": false,
                        "name": "certificatePolicies"
                    }
                ],
                "external_refs": {
                    "crt.sh": "https://crt.sh/?sha1=9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                    "censys.io": "https://search.censys.io/certificates?q=parsed.fingerprint_sha1%3A9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                    "urlscan.io": null
                },
                "is_self_signed": false,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "issuer_common_name": null,
                "known_compromised": false,
                "md5_fingerprint": "c6150925cfea5941ddc7ff2a0a506692",
                "not_after": "2034-06-28T17:39:16",
                "not_before": "2009-09-02T00:00:00",
                "pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "public_key_curve": null,
                "public_key_exponent": 65537,
                "public_key_modulus": 26894789576491863019171445242018370132029525033879210664513024255165308689836081694724912552986436241602345929261854187816625921774943728567119070351838976265193901442169339571326613928339955106648223197498035701437846440970934704192382084561469274550003268570741310868032789070264835003681318445644941362885752628282968349509706358865971392279088395067847314610178969555804359319567178098112935181143559364150874524817692694181296058297355335204675211145990489303168553611700020424738364579606192390834705213026692659672388567853246354560726855054573503174641583891075106464210711468427779853334564691648681991700229,
                "public_key_size": 2048,
                "public_key_type": "RSA",
                "revocation_crl_urls": [
                    "http://s.ss2.us/r.crl"
                ],
                "san": [],
                "serial_number": "61:37:30:65:34:61:34:63:33:34:38:32:62:37:37:66",
                "serial_number_decimal": 12037640545166866303,
                "serial_number_hex": "0xa70e4a4c3482b77f",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "sha256_fingerprint": "28689b30e4c306aab53b027b29e36ad6dd1dcf4b953994482ca84bdc1ecac996",
                "signature_algorithm": "sha256WithRSAEncryption",
                "spki_fingerprint": "2b071c59a0a0ae76b0eadb2bad23bad4580b69c3601b630c2eaf0613afa83f92",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "subject_common_name": "Starfield Services Root Certificate Authority - G2",
                "subject_key_identifier": "9c5f00dfaa01d7302b3888a2b86d4a9cf2119183",
                "validation_level": null,
                "validation_oid": null,
                "version": 2,
                "type": "intermediate"
            }
        ],
        "client": {
            "sni_support": true,
            "certificate_mtls_expected": null,
            "certificate_trusted": null,
            "certificate_match": null,
            "expected_client_subjects": []
        },
        "cipher": {
            "forward_anonymity": null,
            "offered": [
                "AES128-GCM-SHA256",
                "AES128-SHA",
                "AES128-SHA256",
                "AES256-GCM-SHA384",
                "AES256-SHA",
                "AES256-SHA256",
                "DHE-PSK-AES128-CBC-SHA",
                "DHE-PSK-AES128-CBC-SHA256",
                "DHE-PSK-AES128-GCM-SHA256",
                "DHE-PSK-AES256-CBC-SHA",
                "DHE-PSK-AES256-CBC-SHA384",
                "DHE-PSK-AES256-GCM-SHA384",
                "DHE-PSK-CHACHA20-POLY1305",
                "DHE-RSA-AES128-GCM-SHA256",
                "DHE-RSA-AES128-SHA",
                "DHE-RSA-AES128-SHA256",
                "DHE-RSA-AES256-GCM-SHA384",
                "DHE-RSA-AES256-SHA",
                "DHE-RSA-AES256-SHA256",
                "DHE-RSA-CHACHA20-POLY1305",
                "ECDHE-ECDSA-AES128-GCM-SHA256",
                "ECDHE-ECDSA-AES128-SHA",
                "ECDHE-ECDSA-AES128-SHA256",
                "ECDHE-ECDSA-AES256-GCM-SHA384",
                "ECDHE-ECDSA-AES256-SHA",
                "ECDHE-ECDSA-AES256-SHA384",
                "ECDHE-ECDSA-CHACHA20-POLY1305",
                "ECDHE-PSK-AES128-CBC-SHA",
                "ECDHE-PSK-AES128-CBC-SHA256",
                "ECDHE-PSK-AES256-CBC-SHA",
                "ECDHE-PSK-AES256-CBC-SHA384",
                "ECDHE-PSK-CHACHA20-POLY1305",
                "ECDHE-RSA-AES128-GCM-SHA256",
                "ECDHE-RSA-AES128-SHA",
                "ECDHE-RSA-AES128-SHA256",
                "ECDHE-RSA-AES256-GCM-SHA384",
                "ECDHE-RSA-AES256-SHA",
                "ECDHE-RSA-AES256-SHA384",
                "ECDHE-RSA-CHACHA20-POLY1305",
                "PSK-AES128-CBC-SHA",
                "PSK-AES128-CBC-SHA256",
                "PSK-AES128-GCM-SHA256",
                "PSK-AES256-CBC-SHA",
                "PSK-AES256-CBC-SHA384",
                "PSK-AES256-GCM-SHA384",
                "PSK-CHACHA20-POLY1305",
                "RSA-PSK-AES128-CBC-SHA",
                "RSA-PSK-AES128-CBC-SHA256",
                "RSA-PSK-AES128-GCM-SHA256",
                "RSA-PSK-AES256-CBC-SHA",
                "RSA-PSK-AES256-CBC-SHA384",
                "RSA-PSK-AES256-GCM-SHA384",
                "RSA-PSK-CHACHA20-POLY1305",
                "SRP-AES-128-CBC-SHA",
                "SRP-AES-256-CBC-SHA",
                "SRP-RSA-AES-128-CBC-SHA",
                "SRP-RSA-AES-256-CBC-SHA",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256"
            ],
            "offered_rfc": [
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_DHE_PSK_WITH_AES_128_CBC_SHA",
                "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256",
                "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256",
                "TLS_DHE_PSK_WITH_AES_256_CBC_SHA",
                "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384",
                "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384",
                "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
                "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
                "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
                "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA",
                "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256",
                "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA",
                "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384",
                "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_PSK_WITH_AES_128_CBC_SHA",
                "TLS_PSK_WITH_AES_128_CBC_SHA256",
                "TLS_PSK_WITH_AES_128_GCM_SHA256",
                "TLS_PSK_WITH_AES_256_CBC_SHA",
                "TLS_PSK_WITH_AES_256_CBC_SHA384",
                "TLS_PSK_WITH_AES_256_GCM_SHA384",
                "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_RSA_PSK_WITH_AES_128_CBC_SHA",
                "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256",
                "TLS_RSA_PSK_WITH_AES_256_CBC_SHA",
                "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384",
                "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384",
                "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256",
                "TLS_RSA_WITH_AES_128_CBC_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_RSA_WITH_AES_256_CBC_SHA",
                "TLS_RSA_WITH_AES_256_CBC_SHA256",
                "TLS_RSA_WITH_AES_256_GCM_SHA384",
                "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA",
                "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA",
                "TLS_SRP_SHA_WITH_AES_128_CBC_SHA",
                "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"
            ],
            "negotiated": "ECDHE-RSA-AES128-GCM-SHA256",
            "negotiated_bits": 128,
            "negotiated_rfc": 128
        },
        "protocol": {
            "negotiated": "TLSv1.2 (0x303)",
            "preferred": "TLSv1.3 (0x304)",
            "offered": [
                "TLSv1.2 (0x303)",
                "TLSv1.3 (0x304)"
            ]
        },
        "session_resumption": {
            "cache_mode": "session_resumption_caching",
            "tickets": true,
            "ticket_hint": true
        }
    },
    "certificates": [
        "06b25927c42a721631c1efd9431e648fa62e1e39",
        "8da7f965ec5efc37910f1c6e59fdc1cc6a6ede16",
        "917e732d330f9a12404f73d8bea36948b929dffc",
        "925a8f8d2c6d04e0665f596aff22d863e8256f3f",
        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        "ad7e1c28b064ef8f6003402014c3d0e3370eb58a",
        "df2894c9454f12da8d20af63c5bd020ae7bbc739"
    ],
    "http": [
        {
            "title": "Trivial Security",
            "status_code": 200,
            "headers": {
                "Content-Type": "text/html",
                "Content-Length": "462",
                "Connection": "keep-alive",
                "Last-Modified": "Tue, 15 Nov 2022 00:05:12 GMT",
                "Accept-Ranges": "bytes",
                "Server": "AmazonS3",
                "Date": "Tue, 15 Nov 2022 10:17:02 GMT",
                "ETag": "\"c66a3b0fd0606bc023e60f9476817468\"",
                "Vary": "Accept-Encoding, Origin",
                "X-Cache": "Hit from cloudfront",
                "Via": "1.1 23a240d9fc96e3c349b1797185823abc.cloudfront.net (CloudFront)",
                "X-Amz-Cf-Pop": "LAX50-C4",
                "X-Amz-Cf-Id": "m_8bk7CgJ5f3cZfxiCFHX2bQMZpGnOelYrTDhwSjD_dZW76xuOXsyg==",
                "Age": "231",
                "X-Frame-Options": "DENY",
                "Referrer-Policy": "same-origin",
                "Content-Security-Policy": "frame-ancestors 'none'; default-src 'self'; img-src 'self' https://www.gravatar.com data:; script-src 'self' 'unsafe-eval' https://www.gstatic.com https://www.google.com; script-src-elem 'self' https://cdn.jsdelivr.net https://js.stripe.com; font-src 'self' https://fonts.gstatic.com data:; object-src 'none'; form-action 'none'; worker-src blob:; frame-src https://js.stripe.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; style-src-attr 'sha256-pILX+5FGCpLRHvNBgtABIdSMmytrYudGxJBUYXY1t0s=' 'sha256-wK4n87cEV+DaOorOySn50J1N+etqDZQSmu9zgJp4nu4='; connect-src 'self' https://qkgmmtub5lrr7t66tj6atsrfoa0iekqj.lambda-url.ap-southeast-2.on.aws/",
                "X-Content-Type-Options": "nosniff",
                "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload"
            },
            "body_hash": "f1b0c02ac2418a6b8efadf780382e8a8aed42a17"
        }
    ]
}